// This file has been auto-generated by Warthog.  Do not update directly as it
// will be re-written.  If you need to change this file, update models or add
// new TypeGraphQL objects
import { GraphQLID as ID } from "graphql";
import {
  ArgsType,
  Field as TypeGraphQLField,
  Float,
  InputType as TypeGraphQLInputType,
  Int
} from "type-graphql";
import { registerEnumType } from "type-graphql";
// eslint-disable-next-line @typescript-eslint/no-var-requires
const { GraphQLJSONObject } = require("graphql-type-json");
import { BaseWhereInput, PaginationArgs } from "egg-typeorm-graphql";
import { PermissionIsCategory } from "../../typeorm/account/entity/auth/permission";
import { PermissionIsGlobal } from "../../typeorm/account/entity/auth/permission";
import { UserGender } from "../../typeorm/account/entity/auth/user";
import { UserIsSuperuser } from "../../typeorm/account/entity/auth/user";
import { UserIsStaff } from "../../typeorm/account/entity/auth/user";
import { UserIsActive } from "../../typeorm/account/entity/auth/user";
import { MenuIsCategory } from "../../typeorm/account/entity/auth/menu";
import { WxMsgTaskType } from "../../typeorm/account/entity/wechat/messageTask";
import { WxMsgIsDelay } from "../../typeorm/account/entity/wechat/messageTask";
import { WxMsgTaskProgress } from "../../typeorm/account/entity/wechat/messageTask";
import { WxTmPushStatus } from "../../typeorm/account/entity/wechat/templateMessage";
import { WxWechatUserSex } from "../../typeorm/account/entity/wechat/wechatUser";
import { WxWechatUserSubscribe } from "../../typeorm/account/entity/wechat/wechatUser";
import { K12PowerCategoryType } from "../../typeorm/k12/entity/regulate/powerCategory";
import { K12PowerCategoryStatus } from "../../typeorm/k12/entity/regulate/powerCategory";
import { K12PowerStatus } from "../../typeorm/k12/entity/regulate/power";
import { K12ModuleGroupStatus } from "../../typeorm/k12/entity/regulate/moduleGroup";
import { K12ModuleGroupSystemDefault } from "../../typeorm/k12/entity/regulate/moduleGroup";
import { K12ModuleGroupSchoolDefault } from "../../typeorm/k12/entity/regulate/moduleGroup";
import { K12ModuleGroupNewUserDefault } from "../../typeorm/k12/entity/regulate/moduleGroup";
import { K12ModuleIsCategory } from "../../typeorm/k12/entity/regulate/module";
import { K12ModuleStatus } from "../../typeorm/k12/entity/regulate/module";
import { K12ApplicationStatus } from "../../typeorm/k12/entity/regulate/application";
import { ThirdPartyAuthStatus } from "../../typeorm/account/entity/auth/thirdPartyAuth";
import { K12SchoolRegulateIsInit } from "../../typeorm/k12/entity/regulate/schoolExtend";
// @ts-ignore
import { Organization } from "../../typeorm/account/entity/auth/organization";
// @ts-ignore
import { Department } from "../../typeorm/account/entity/auth/department";
// @ts-ignore
import { RoleUser } from "../../typeorm/account/entity/auth/roleUser";
// @ts-ignore
import { Platform } from "../../typeorm/account/entity/auth/platform";
// @ts-ignore
import { Role } from "../../typeorm/account/entity/auth/role";
// @ts-ignore
import { PermissionRole } from "../../typeorm/account/entity/auth/permissionRole";
// @ts-ignore
import { Permission } from "../../typeorm/account/entity/auth/permission";
// @ts-ignore
import { PermissionUser } from "../../typeorm/account/entity/auth/permissionUser";
// @ts-ignore
import { User } from "../../typeorm/account/entity/auth/user";
// @ts-ignore
import { MenuUser } from "../../typeorm/account/entity/auth/menuUser";
// @ts-ignore
import { MenuRole } from "../../typeorm/account/entity/auth/menuRole";
// @ts-ignore
import { Menu } from "../../typeorm/account/entity/auth/menu";
// @ts-ignore
import { WxAccountConfig } from "../../typeorm/account/entity/wechat/accountConfig";
// @ts-ignore
import { WxAccount } from "../../typeorm/account/entity/wechat/account";
// @ts-ignore
import { WxMessageTask } from "../../typeorm/account/entity/wechat/messageTask";
// @ts-ignore
import { WxTemplateMessage } from "../../typeorm/account/entity/wechat/templateMessage";
// @ts-ignore
import { WxWechatUser } from "../../typeorm/account/entity/wechat/wechatUser";
// @ts-ignore
import { K12PowerCategory } from "../../typeorm/k12/entity/regulate/powerCategory";
// @ts-ignore
import { K12Power } from "../../typeorm/k12/entity/regulate/power";
// @ts-ignore
import { K12PowerModuleMapping } from "../../typeorm/k12/entity/regulate/powerModuleMapping";
// @ts-ignore
import { K12UserModuleGroupMapping } from "../../typeorm/k12/entity/regulate/userModuleGroupMapping";
// @ts-ignore
import { K12RoleGroup } from "../../typeorm/k12/entity/regulate/roleGroup";
// @ts-ignore
import { K12ModuleGroup } from "../../typeorm/k12/entity/regulate/moduleGroup";
// @ts-ignore
import { K12ModuleGroupMapping } from "../../typeorm/k12/entity/regulate/moduleGroupMapping";
// @ts-ignore
import { K12SchoolModuleMapping } from "../../typeorm/k12/entity/regulate/schoolModuleMapping";
// @ts-ignore
import { K12Module } from "../../typeorm/k12/entity/regulate/module";
// @ts-ignore
import { K12Application } from "../../typeorm/k12/entity/regulate/application";
// @ts-ignore
import { ThirdPartyAuth } from "../../typeorm/account/entity/auth/thirdPartyAuth";
// @ts-ignore
import { WxTemplateSetting } from "../../typeorm/account/entity/wechat/templateSetting";
// @ts-ignore
import { WxTemplateLibrary } from "../../typeorm/account/entity/wechat/templateLibrary";
// @ts-ignore
import { K12SchoolExtend } from "../../typeorm/k12/entity/regulate/schoolExtend";

export enum OrganizationOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  organizeName_ASC = "organizeName_ASC",
  organizeName_DESC = "organizeName_DESC",

  location_ASC = "location_ASC",
  location_DESC = "location_DESC"
}
registerEnumType(OrganizationOrderByEnum, {
  name: "OrganizationOrderByInput"
});

@TypeGraphQLInputType()
export class OrganizationWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  organizeName_eq?: string;
  @TypeGraphQLField({ nullable: true })
  organizeName_contains?: string;
  @TypeGraphQLField({ nullable: true })
  organizeName_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  organizeName_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  organizeName_in?: string[];

  @TypeGraphQLField({ nullable: true })
  location_eq?: string;
  @TypeGraphQLField({ nullable: true })
  location_contains?: string;
  @TypeGraphQLField({ nullable: true })
  location_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  location_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  location_in?: string[];
}

@TypeGraphQLInputType()
export class OrganizationWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class OrganizationCreateInput {
  @TypeGraphQLField()
  organizeName!: string;

  @TypeGraphQLField({ nullable: true })
  location?: string;
}

@TypeGraphQLInputType()
export class OrganizationUpdateInput {
  @TypeGraphQLField({ nullable: true })
  organizeName?: string;

  @TypeGraphQLField({ nullable: true })
  location?: string;
}

@ArgsType()
export class OrganizationWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => OrganizationWhereInput, { nullable: true })
  where?: OrganizationWhereInput;
  @TypeGraphQLField(() => OrganizationOrderByEnum, { nullable: true })
  orderBy?: OrganizationOrderByEnum;
}

@ArgsType()
export class OrganizationCreateManyArgs {
  @TypeGraphQLField(() => [OrganizationCreateInput])
  data!: OrganizationCreateInput[];
}

@ArgsType()
export class OrganizationUpdateArgs {
  @TypeGraphQLField() data!: OrganizationUpdateInput;
  @TypeGraphQLField() where!: OrganizationWhereUniqueInput;
}

export enum DepartmentOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  departmentName_ASC = "departmentName_ASC",
  departmentName_DESC = "departmentName_DESC",

  location_ASC = "location_ASC",
  location_DESC = "location_DESC",

  departmentOrder_ASC = "departmentOrder_ASC",
  departmentOrder_DESC = "departmentOrder_DESC",

  supreiorId_ASC = "supreiorId_ASC",
  supreiorId_DESC = "supreiorId_DESC",

  organizationId_ASC = "organizationId_ASC",
  organizationId_DESC = "organizationId_DESC"
}
registerEnumType(DepartmentOrderByEnum, {
  name: "DepartmentOrderByInput"
});

@TypeGraphQLInputType()
export class DepartmentWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  departmentName_eq?: string;
  @TypeGraphQLField({ nullable: true })
  departmentName_contains?: string;
  @TypeGraphQLField({ nullable: true })
  departmentName_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  departmentName_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  departmentName_in?: string[];

  @TypeGraphQLField({ nullable: true })
  location_eq?: string;
  @TypeGraphQLField({ nullable: true })
  location_contains?: string;
  @TypeGraphQLField({ nullable: true })
  location_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  location_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  location_in?: string[];

  @TypeGraphQLField({ nullable: true })
  departmentOrder_eq?: number;
  @TypeGraphQLField({ nullable: true })
  departmentOrder_gt?: number;
  @TypeGraphQLField({ nullable: true })
  departmentOrder_gte?: number;
  @TypeGraphQLField({ nullable: true })
  departmentOrder_lt?: number;
  @TypeGraphQLField({ nullable: true })
  departmentOrder_lte?: number;
  @TypeGraphQLField(() => [Int], { nullable: true })
  departmentOrder_in?: number[];

  @TypeGraphQLField(() => ID, { nullable: true })
  supreiorId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  supreiorId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  organizationId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  organizationId_in?: string[];
}

@TypeGraphQLInputType()
export class DepartmentWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class DepartmentCreateInput {
  @TypeGraphQLField()
  departmentName!: string;

  @TypeGraphQLField({ nullable: true })
  location?: string;

  @TypeGraphQLField({ nullable: true })
  departmentOrder?: number;

  @TypeGraphQLField({ nullable: true })
  supreiorId?: string;

  @TypeGraphQLField({ nullable: true })
  organizationId?: string;
}

@TypeGraphQLInputType()
export class DepartmentUpdateInput {
  @TypeGraphQLField({ nullable: true })
  departmentName?: string;

  @TypeGraphQLField({ nullable: true })
  location?: string;

  @TypeGraphQLField({ nullable: true })
  departmentOrder?: number;

  @TypeGraphQLField({ nullable: true })
  supreiorId?: string;

  @TypeGraphQLField({ nullable: true })
  organizationId?: string;
}

@ArgsType()
export class DepartmentWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => DepartmentWhereInput, { nullable: true })
  where?: DepartmentWhereInput;
  @TypeGraphQLField(() => DepartmentOrderByEnum, { nullable: true })
  orderBy?: DepartmentOrderByEnum;
}

@ArgsType()
export class DepartmentCreateManyArgs {
  @TypeGraphQLField(() => [DepartmentCreateInput])
  data!: DepartmentCreateInput[];
}

@ArgsType()
export class DepartmentUpdateArgs {
  @TypeGraphQLField() data!: DepartmentUpdateInput;
  @TypeGraphQLField() where!: DepartmentWhereUniqueInput;
}

export enum RoleUserOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  userId_ASC = "userId_ASC",
  userId_DESC = "userId_DESC",

  roleId_ASC = "roleId_ASC",
  roleId_DESC = "roleId_DESC"
}
registerEnumType(RoleUserOrderByEnum, {
  name: "RoleUserOrderByInput"
});

@TypeGraphQLInputType()
export class RoleUserWhereInput extends BaseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  userId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  userId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  roleId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  roleId_in?: string[];
}

@TypeGraphQLInputType()
export class RoleUserWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class RoleUserCreateInput {
  @TypeGraphQLField()
  userId!: string;

  @TypeGraphQLField()
  roleId!: string;
}

@TypeGraphQLInputType()
export class RoleUserUpdateInput {
  @TypeGraphQLField({ nullable: true })
  userId?: string;

  @TypeGraphQLField({ nullable: true })
  roleId?: string;
}

@ArgsType()
export class RoleUserWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => RoleUserWhereInput, { nullable: true })
  where?: RoleUserWhereInput;
  @TypeGraphQLField(() => RoleUserOrderByEnum, { nullable: true })
  orderBy?: RoleUserOrderByEnum;
}

@ArgsType()
export class RoleUserCreateManyArgs {
  @TypeGraphQLField(() => [RoleUserCreateInput])
  data!: RoleUserCreateInput[];
}

@ArgsType()
export class RoleUserUpdateArgs {
  @TypeGraphQLField() data!: RoleUserUpdateInput;
  @TypeGraphQLField() where!: RoleUserWhereUniqueInput;
}

export enum PlatformOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  platformName_ASC = "platformName_ASC",
  platformName_DESC = "platformName_DESC",

  platformDesc_ASC = "platformDesc_ASC",
  platformDesc_DESC = "platformDesc_DESC"
}
registerEnumType(PlatformOrderByEnum, {
  name: "PlatformOrderByInput"
});

@TypeGraphQLInputType()
export class PlatformWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  platformName_eq?: string;
  @TypeGraphQLField({ nullable: true })
  platformName_contains?: string;
  @TypeGraphQLField({ nullable: true })
  platformName_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  platformName_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  platformName_in?: string[];

  @TypeGraphQLField({ nullable: true })
  platformDesc_eq?: string;
  @TypeGraphQLField({ nullable: true })
  platformDesc_contains?: string;
  @TypeGraphQLField({ nullable: true })
  platformDesc_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  platformDesc_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  platformDesc_in?: string[];
}

@TypeGraphQLInputType()
export class PlatformWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class PlatformCreateInput {
  @TypeGraphQLField()
  platformName!: string;

  @TypeGraphQLField()
  platformDesc!: string;
}

@TypeGraphQLInputType()
export class PlatformUpdateInput {
  @TypeGraphQLField({ nullable: true })
  platformName?: string;

  @TypeGraphQLField({ nullable: true })
  platformDesc?: string;
}

@ArgsType()
export class PlatformWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => PlatformWhereInput, { nullable: true })
  where?: PlatformWhereInput;
  @TypeGraphQLField(() => PlatformOrderByEnum, { nullable: true })
  orderBy?: PlatformOrderByEnum;
}

@ArgsType()
export class PlatformCreateManyArgs {
  @TypeGraphQLField(() => [PlatformCreateInput])
  data!: PlatformCreateInput[];
}

@ArgsType()
export class PlatformUpdateArgs {
  @TypeGraphQLField() data!: PlatformUpdateInput;
  @TypeGraphQLField() where!: PlatformWhereUniqueInput;
}

export enum RoleOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  roleName_ASC = "roleName_ASC",
  roleName_DESC = "roleName_DESC",

  roleCode_ASC = "roleCode_ASC",
  roleCode_DESC = "roleCode_DESC",

  remark_ASC = "remark_ASC",
  remark_DESC = "remark_DESC",

  platformId_ASC = "platformId_ASC",
  platformId_DESC = "platformId_DESC"
}
registerEnumType(RoleOrderByEnum, {
  name: "RoleOrderByInput"
});

@TypeGraphQLInputType()
export class RoleWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  roleName_eq?: string;
  @TypeGraphQLField({ nullable: true })
  roleName_contains?: string;
  @TypeGraphQLField({ nullable: true })
  roleName_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  roleName_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  roleName_in?: string[];

  @TypeGraphQLField({ nullable: true })
  roleCode_eq?: string;
  @TypeGraphQLField({ nullable: true })
  roleCode_contains?: string;
  @TypeGraphQLField({ nullable: true })
  roleCode_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  roleCode_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  roleCode_in?: string[];

  @TypeGraphQLField({ nullable: true })
  remark_eq?: string;
  @TypeGraphQLField({ nullable: true })
  remark_contains?: string;
  @TypeGraphQLField({ nullable: true })
  remark_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  remark_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  remark_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  platformId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  platformId_in?: string[];
}

@TypeGraphQLInputType()
export class RoleWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class RoleCreateInput {
  @TypeGraphQLField()
  roleName!: string;

  @TypeGraphQLField()
  roleCode!: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField({ nullable: true })
  platformId?: string;
}

@TypeGraphQLInputType()
export class RoleUpdateInput {
  @TypeGraphQLField({ nullable: true })
  roleName?: string;

  @TypeGraphQLField({ nullable: true })
  roleCode?: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField({ nullable: true })
  platformId?: string;
}

@ArgsType()
export class RoleWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => RoleWhereInput, { nullable: true })
  where?: RoleWhereInput;
  @TypeGraphQLField(() => RoleOrderByEnum, { nullable: true })
  orderBy?: RoleOrderByEnum;
}

@ArgsType()
export class RoleCreateManyArgs {
  @TypeGraphQLField(() => [RoleCreateInput])
  data!: RoleCreateInput[];
}

@ArgsType()
export class RoleUpdateArgs {
  @TypeGraphQLField() data!: RoleUpdateInput;
  @TypeGraphQLField() where!: RoleWhereUniqueInput;
}

export enum PermissionRoleOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  roleId_ASC = "roleId_ASC",
  roleId_DESC = "roleId_DESC",

  permissionId_ASC = "permissionId_ASC",
  permissionId_DESC = "permissionId_DESC"
}
registerEnumType(PermissionRoleOrderByEnum, {
  name: "PermissionRoleOrderByInput"
});

@TypeGraphQLInputType()
export class PermissionRoleWhereInput extends BaseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  roleId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  roleId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  permissionId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  permissionId_in?: string[];
}

@TypeGraphQLInputType()
export class PermissionRoleWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class PermissionRoleCreateInput {
  @TypeGraphQLField()
  roleId!: string;

  @TypeGraphQLField()
  permissionId!: string;
}

@TypeGraphQLInputType()
export class PermissionRoleUpdateInput {
  @TypeGraphQLField({ nullable: true })
  roleId?: string;

  @TypeGraphQLField({ nullable: true })
  permissionId?: string;
}

@ArgsType()
export class PermissionRoleWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => PermissionRoleWhereInput, { nullable: true })
  where?: PermissionRoleWhereInput;
  @TypeGraphQLField(() => PermissionRoleOrderByEnum, { nullable: true })
  orderBy?: PermissionRoleOrderByEnum;
}

@ArgsType()
export class PermissionRoleCreateManyArgs {
  @TypeGraphQLField(() => [PermissionRoleCreateInput])
  data!: PermissionRoleCreateInput[];
}

@ArgsType()
export class PermissionRoleUpdateArgs {
  @TypeGraphQLField() data!: PermissionRoleUpdateInput;
  @TypeGraphQLField() where!: PermissionRoleWhereUniqueInput;
}

export enum PermissionOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC",

  code_ASC = "code_ASC",
  code_DESC = "code_DESC",

  isCategory_ASC = "isCategory_ASC",
  isCategory_DESC = "isCategory_DESC",

  isGlobal_ASC = "isGlobal_ASC",
  isGlobal_DESC = "isGlobal_DESC",

  remark_ASC = "remark_ASC",
  remark_DESC = "remark_DESC",

  supreiorId_ASC = "supreiorId_ASC",
  supreiorId_DESC = "supreiorId_DESC",

  platformId_ASC = "platformId_ASC",
  platformId_DESC = "platformId_DESC"
}
registerEnumType(PermissionOrderByEnum, {
  name: "PermissionOrderByInput"
});

@TypeGraphQLInputType()
export class PermissionWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  name_eq?: string;
  @TypeGraphQLField({ nullable: true })
  name_contains?: string;
  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];

  @TypeGraphQLField({ nullable: true })
  code_eq?: string;
  @TypeGraphQLField({ nullable: true })
  code_contains?: string;
  @TypeGraphQLField({ nullable: true })
  code_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  code_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  code_in?: string[];

  @TypeGraphQLField(() => PermissionIsCategory, { nullable: true })
  isCategory_eq?: PermissionIsCategory;
  @TypeGraphQLField(() => [PermissionIsCategory], { nullable: true })
  isCategory_in?: PermissionIsCategory[];

  @TypeGraphQLField(() => PermissionIsGlobal, { nullable: true })
  isGlobal_eq?: PermissionIsGlobal;
  @TypeGraphQLField(() => [PermissionIsGlobal], { nullable: true })
  isGlobal_in?: PermissionIsGlobal[];

  @TypeGraphQLField({ nullable: true })
  remark_eq?: string;
  @TypeGraphQLField({ nullable: true })
  remark_contains?: string;
  @TypeGraphQLField({ nullable: true })
  remark_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  remark_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  remark_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  supreiorId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  supreiorId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  platformId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  platformId_in?: string[];
}

@TypeGraphQLInputType()
export class PermissionWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class PermissionCreateInput {
  @TypeGraphQLField()
  name!: string;

  @TypeGraphQLField()
  code!: string;

  @TypeGraphQLField(() => PermissionIsCategory)
  isCategory!: PermissionIsCategory;

  @TypeGraphQLField(() => PermissionIsGlobal)
  isGlobal!: PermissionIsGlobal;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField({ nullable: true })
  supreiorId?: string;

  @TypeGraphQLField({ nullable: true })
  platformId?: string;
}

@TypeGraphQLInputType()
export class PermissionUpdateInput {
  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  code?: string;

  @TypeGraphQLField(() => PermissionIsCategory, { nullable: true })
  isCategory?: PermissionIsCategory;

  @TypeGraphQLField(() => PermissionIsGlobal, { nullable: true })
  isGlobal?: PermissionIsGlobal;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField({ nullable: true })
  supreiorId?: string;

  @TypeGraphQLField({ nullable: true })
  platformId?: string;
}

@ArgsType()
export class PermissionWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => PermissionWhereInput, { nullable: true })
  where?: PermissionWhereInput;
  @TypeGraphQLField(() => PermissionOrderByEnum, { nullable: true })
  orderBy?: PermissionOrderByEnum;
}

@ArgsType()
export class PermissionCreateManyArgs {
  @TypeGraphQLField(() => [PermissionCreateInput])
  data!: PermissionCreateInput[];
}

@ArgsType()
export class PermissionUpdateArgs {
  @TypeGraphQLField() data!: PermissionUpdateInput;
  @TypeGraphQLField() where!: PermissionWhereUniqueInput;
}

export enum PermissionUserOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  userId_ASC = "userId_ASC",
  userId_DESC = "userId_DESC",

  permissionId_ASC = "permissionId_ASC",
  permissionId_DESC = "permissionId_DESC"
}
registerEnumType(PermissionUserOrderByEnum, {
  name: "PermissionUserOrderByInput"
});

@TypeGraphQLInputType()
export class PermissionUserWhereInput extends BaseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  userId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  userId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  permissionId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  permissionId_in?: string[];
}

@TypeGraphQLInputType()
export class PermissionUserWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class PermissionUserCreateInput {
  @TypeGraphQLField()
  userId!: string;

  @TypeGraphQLField()
  permissionId!: string;
}

@TypeGraphQLInputType()
export class PermissionUserUpdateInput {
  @TypeGraphQLField({ nullable: true })
  userId?: string;

  @TypeGraphQLField({ nullable: true })
  permissionId?: string;
}

@ArgsType()
export class PermissionUserWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => PermissionUserWhereInput, { nullable: true })
  where?: PermissionUserWhereInput;
  @TypeGraphQLField(() => PermissionUserOrderByEnum, { nullable: true })
  orderBy?: PermissionUserOrderByEnum;
}

@ArgsType()
export class PermissionUserCreateManyArgs {
  @TypeGraphQLField(() => [PermissionUserCreateInput])
  data!: PermissionUserCreateInput[];
}

@ArgsType()
export class PermissionUserUpdateArgs {
  @TypeGraphQLField() data!: PermissionUserUpdateInput;
  @TypeGraphQLField() where!: PermissionUserWhereUniqueInput;
}

export enum UserOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  username_ASC = "username_ASC",
  username_DESC = "username_DESC",

  password_ASC = "password_ASC",
  password_DESC = "password_DESC",

  realname_ASC = "realname_ASC",
  realname_DESC = "realname_DESC",

  nickname_ASC = "nickname_ASC",
  nickname_DESC = "nickname_DESC",

  gender_ASC = "gender_ASC",
  gender_DESC = "gender_DESC",

  isSuperuser_ASC = "isSuperuser_ASC",
  isSuperuser_DESC = "isSuperuser_DESC",

  isStaff_ASC = "isStaff_ASC",
  isStaff_DESC = "isStaff_DESC",

  isActive_ASC = "isActive_ASC",
  isActive_DESC = "isActive_DESC",

  email_ASC = "email_ASC",
  email_DESC = "email_DESC",

  mobile_ASC = "mobile_ASC",
  mobile_DESC = "mobile_DESC",

  firstLoginTime_ASC = "firstLoginTime_ASC",
  firstLoginTime_DESC = "firstLoginTime_DESC",

  lastLoginTime_ASC = "lastLoginTime_ASC",
  lastLoginTime_DESC = "lastLoginTime_DESC",

  departmentId_ASC = "departmentId_ASC",
  departmentId_DESC = "departmentId_DESC",

  organizationId_ASC = "organizationId_ASC",
  organizationId_DESC = "organizationId_DESC",

  platformId_ASC = "platformId_ASC",
  platformId_DESC = "platformId_DESC"
}
registerEnumType(UserOrderByEnum, {
  name: "UserOrderByInput"
});

@TypeGraphQLInputType()
export class UserWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  username_eq?: string;
  @TypeGraphQLField({ nullable: true })
  username_contains?: string;
  @TypeGraphQLField({ nullable: true })
  username_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  username_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  username_in?: string[];

  @TypeGraphQLField({ nullable: true })
  password_eq?: string;
  @TypeGraphQLField({ nullable: true })
  password_contains?: string;
  @TypeGraphQLField({ nullable: true })
  password_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  password_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  password_in?: string[];

  @TypeGraphQLField({ nullable: true })
  realname_eq?: string;
  @TypeGraphQLField({ nullable: true })
  realname_contains?: string;
  @TypeGraphQLField({ nullable: true })
  realname_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  realname_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  realname_in?: string[];

  @TypeGraphQLField({ nullable: true })
  nickname_eq?: string;
  @TypeGraphQLField({ nullable: true })
  nickname_contains?: string;
  @TypeGraphQLField({ nullable: true })
  nickname_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  nickname_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  nickname_in?: string[];

  @TypeGraphQLField(() => UserGender, { nullable: true })
  gender_eq?: UserGender;
  @TypeGraphQLField(() => [UserGender], { nullable: true })
  gender_in?: UserGender[];

  @TypeGraphQLField(() => UserIsSuperuser, { nullable: true })
  isSuperuser_eq?: UserIsSuperuser;
  @TypeGraphQLField(() => [UserIsSuperuser], { nullable: true })
  isSuperuser_in?: UserIsSuperuser[];

  @TypeGraphQLField(() => UserIsStaff, { nullable: true })
  isStaff_eq?: UserIsStaff;
  @TypeGraphQLField(() => [UserIsStaff], { nullable: true })
  isStaff_in?: UserIsStaff[];

  @TypeGraphQLField(() => UserIsActive, { nullable: true })
  isActive_eq?: UserIsActive;
  @TypeGraphQLField(() => [UserIsActive], { nullable: true })
  isActive_in?: UserIsActive[];

  @TypeGraphQLField({ nullable: true })
  email_eq?: string;
  @TypeGraphQLField({ nullable: true })
  email_contains?: string;
  @TypeGraphQLField({ nullable: true })
  email_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  email_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  email_in?: string[];

  @TypeGraphQLField({ nullable: true })
  mobile_eq?: string;
  @TypeGraphQLField({ nullable: true })
  mobile_contains?: string;
  @TypeGraphQLField({ nullable: true })
  mobile_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  mobile_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  mobile_in?: string[];

  @TypeGraphQLField({ nullable: true })
  firstLoginTime_gt?: Date;
  @TypeGraphQLField({ nullable: true })
  firstLoginTime_gte?: Date;
  @TypeGraphQLField({ nullable: true })
  firstLoginTime_lt?: Date;
  @TypeGraphQLField({ nullable: true })
  firstLoginTime_lte?: Date;

  @TypeGraphQLField({ nullable: true })
  lastLoginTime_gt?: Date;
  @TypeGraphQLField({ nullable: true })
  lastLoginTime_gte?: Date;
  @TypeGraphQLField({ nullable: true })
  lastLoginTime_lt?: Date;
  @TypeGraphQLField({ nullable: true })
  lastLoginTime_lte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  departmentId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  departmentId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  organizationId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  organizationId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  platformId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  platformId_in?: string[];
}

@TypeGraphQLInputType()
export class UserWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class UserCreateInput {
  @TypeGraphQLField()
  username!: string;

  @TypeGraphQLField()
  password!: string;

  @TypeGraphQLField({ nullable: true })
  realname?: string;

  @TypeGraphQLField({ nullable: true })
  nickname?: string;

  @TypeGraphQLField(() => UserGender)
  gender!: UserGender;

  @TypeGraphQLField(() => UserIsSuperuser)
  isSuperuser!: UserIsSuperuser;

  @TypeGraphQLField(() => UserIsStaff)
  isStaff!: UserIsStaff;

  @TypeGraphQLField(() => UserIsActive)
  isActive!: UserIsActive;

  @TypeGraphQLField({ nullable: true })
  email?: string;

  @TypeGraphQLField({ nullable: true })
  mobile?: string;

  @TypeGraphQLField({ nullable: true })
  firstLoginTime?: Date;

  @TypeGraphQLField({ nullable: true })
  lastLoginTime?: Date;

  @TypeGraphQLField({ nullable: true })
  departmentId?: string;

  @TypeGraphQLField({ nullable: true })
  organizationId?: string;

  @TypeGraphQLField({ nullable: true })
  platformId?: string;
}

@TypeGraphQLInputType()
export class UserUpdateInput {
  @TypeGraphQLField({ nullable: true })
  username?: string;

  @TypeGraphQLField({ nullable: true })
  password?: string;

  @TypeGraphQLField({ nullable: true })
  realname?: string;

  @TypeGraphQLField({ nullable: true })
  nickname?: string;

  @TypeGraphQLField(() => UserGender, { nullable: true })
  gender?: UserGender;

  @TypeGraphQLField(() => UserIsSuperuser, { nullable: true })
  isSuperuser?: UserIsSuperuser;

  @TypeGraphQLField(() => UserIsStaff, { nullable: true })
  isStaff?: UserIsStaff;

  @TypeGraphQLField(() => UserIsActive, { nullable: true })
  isActive?: UserIsActive;

  @TypeGraphQLField({ nullable: true })
  email?: string;

  @TypeGraphQLField({ nullable: true })
  mobile?: string;

  @TypeGraphQLField({ nullable: true })
  firstLoginTime?: Date;

  @TypeGraphQLField({ nullable: true })
  lastLoginTime?: Date;

  @TypeGraphQLField({ nullable: true })
  departmentId?: string;

  @TypeGraphQLField({ nullable: true })
  organizationId?: string;

  @TypeGraphQLField({ nullable: true })
  platformId?: string;
}

@ArgsType()
export class UserWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => UserWhereInput, { nullable: true })
  where?: UserWhereInput;
  @TypeGraphQLField(() => UserOrderByEnum, { nullable: true })
  orderBy?: UserOrderByEnum;
}

@ArgsType()
export class UserCreateManyArgs {
  @TypeGraphQLField(() => [UserCreateInput])
  data!: UserCreateInput[];
}

@ArgsType()
export class UserUpdateArgs {
  @TypeGraphQLField() data!: UserUpdateInput;
  @TypeGraphQLField() where!: UserWhereUniqueInput;
}

export enum MenuUserOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  userId_ASC = "userId_ASC",
  userId_DESC = "userId_DESC",

  menuId_ASC = "menuId_ASC",
  menuId_DESC = "menuId_DESC"
}
registerEnumType(MenuUserOrderByEnum, {
  name: "MenuUserOrderByInput"
});

@TypeGraphQLInputType()
export class MenuUserWhereInput extends BaseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  userId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  userId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  menuId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  menuId_in?: string[];
}

@TypeGraphQLInputType()
export class MenuUserWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class MenuUserCreateInput {
  @TypeGraphQLField()
  userId!: string;

  @TypeGraphQLField()
  menuId!: string;
}

@TypeGraphQLInputType()
export class MenuUserUpdateInput {
  @TypeGraphQLField({ nullable: true })
  userId?: string;

  @TypeGraphQLField({ nullable: true })
  menuId?: string;
}

@ArgsType()
export class MenuUserWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => MenuUserWhereInput, { nullable: true })
  where?: MenuUserWhereInput;
  @TypeGraphQLField(() => MenuUserOrderByEnum, { nullable: true })
  orderBy?: MenuUserOrderByEnum;
}

@ArgsType()
export class MenuUserCreateManyArgs {
  @TypeGraphQLField(() => [MenuUserCreateInput])
  data!: MenuUserCreateInput[];
}

@ArgsType()
export class MenuUserUpdateArgs {
  @TypeGraphQLField() data!: MenuUserUpdateInput;
  @TypeGraphQLField() where!: MenuUserWhereUniqueInput;
}

export enum MenuRoleOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  roleId_ASC = "roleId_ASC",
  roleId_DESC = "roleId_DESC",

  menuId_ASC = "menuId_ASC",
  menuId_DESC = "menuId_DESC"
}
registerEnumType(MenuRoleOrderByEnum, {
  name: "MenuRoleOrderByInput"
});

@TypeGraphQLInputType()
export class MenuRoleWhereInput extends BaseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  roleId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  roleId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  menuId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  menuId_in?: string[];
}

@TypeGraphQLInputType()
export class MenuRoleWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class MenuRoleCreateInput {
  @TypeGraphQLField()
  roleId!: string;

  @TypeGraphQLField()
  menuId!: string;
}

@TypeGraphQLInputType()
export class MenuRoleUpdateInput {
  @TypeGraphQLField({ nullable: true })
  roleId?: string;

  @TypeGraphQLField({ nullable: true })
  menuId?: string;
}

@ArgsType()
export class MenuRoleWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => MenuRoleWhereInput, { nullable: true })
  where?: MenuRoleWhereInput;
  @TypeGraphQLField(() => MenuRoleOrderByEnum, { nullable: true })
  orderBy?: MenuRoleOrderByEnum;
}

@ArgsType()
export class MenuRoleCreateManyArgs {
  @TypeGraphQLField(() => [MenuRoleCreateInput])
  data!: MenuRoleCreateInput[];
}

@ArgsType()
export class MenuRoleUpdateArgs {
  @TypeGraphQLField() data!: MenuRoleUpdateInput;
  @TypeGraphQLField() where!: MenuRoleWhereUniqueInput;
}

export enum MenuOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC",

  code_ASC = "code_ASC",
  code_DESC = "code_DESC",

  path_ASC = "path_ASC",
  path_DESC = "path_DESC",

  icon_ASC = "icon_ASC",
  icon_DESC = "icon_DESC",

  order_ASC = "order_ASC",
  order_DESC = "order_DESC",

  isCategory_ASC = "isCategory_ASC",
  isCategory_DESC = "isCategory_DESC",

  remark_ASC = "remark_ASC",
  remark_DESC = "remark_DESC",

  supreiorId_ASC = "supreiorId_ASC",
  supreiorId_DESC = "supreiorId_DESC",

  platformId_ASC = "platformId_ASC",
  platformId_DESC = "platformId_DESC"
}
registerEnumType(MenuOrderByEnum, {
  name: "MenuOrderByInput"
});

@TypeGraphQLInputType()
export class MenuWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  name_eq?: string;
  @TypeGraphQLField({ nullable: true })
  name_contains?: string;
  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];

  @TypeGraphQLField({ nullable: true })
  code_eq?: string;
  @TypeGraphQLField({ nullable: true })
  code_contains?: string;
  @TypeGraphQLField({ nullable: true })
  code_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  code_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  code_in?: string[];

  @TypeGraphQLField({ nullable: true })
  path_eq?: string;
  @TypeGraphQLField({ nullable: true })
  path_contains?: string;
  @TypeGraphQLField({ nullable: true })
  path_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  path_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  path_in?: string[];

  @TypeGraphQLField({ nullable: true })
  icon_eq?: string;
  @TypeGraphQLField({ nullable: true })
  icon_contains?: string;
  @TypeGraphQLField({ nullable: true })
  icon_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  icon_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  icon_in?: string[];

  @TypeGraphQLField({ nullable: true })
  order_eq?: number;
  @TypeGraphQLField({ nullable: true })
  order_gt?: number;
  @TypeGraphQLField({ nullable: true })
  order_gte?: number;
  @TypeGraphQLField({ nullable: true })
  order_lt?: number;
  @TypeGraphQLField({ nullable: true })
  order_lte?: number;
  @TypeGraphQLField(() => [Int], { nullable: true })
  order_in?: number[];

  @TypeGraphQLField(() => MenuIsCategory, { nullable: true })
  isCategory_eq?: MenuIsCategory;
  @TypeGraphQLField(() => [MenuIsCategory], { nullable: true })
  isCategory_in?: MenuIsCategory[];

  @TypeGraphQLField({ nullable: true })
  remark_eq?: string;
  @TypeGraphQLField({ nullable: true })
  remark_contains?: string;
  @TypeGraphQLField({ nullable: true })
  remark_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  remark_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  remark_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  supreiorId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  supreiorId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  platformId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  platformId_in?: string[];
}

@TypeGraphQLInputType()
export class MenuWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class MenuCreateInput {
  @TypeGraphQLField()
  name!: string;

  @TypeGraphQLField()
  code!: string;

  @TypeGraphQLField()
  path!: string;

  @TypeGraphQLField()
  icon!: string;

  @TypeGraphQLField({ nullable: true })
  order?: number;

  @TypeGraphQLField(() => MenuIsCategory)
  isCategory!: MenuIsCategory;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField({ nullable: true })
  supreiorId?: string;

  @TypeGraphQLField({ nullable: true })
  platformId?: string;
}

@TypeGraphQLInputType()
export class MenuUpdateInput {
  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  code?: string;

  @TypeGraphQLField({ nullable: true })
  path?: string;

  @TypeGraphQLField({ nullable: true })
  icon?: string;

  @TypeGraphQLField({ nullable: true })
  order?: number;

  @TypeGraphQLField(() => MenuIsCategory, { nullable: true })
  isCategory?: MenuIsCategory;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField({ nullable: true })
  supreiorId?: string;

  @TypeGraphQLField({ nullable: true })
  platformId?: string;
}

@ArgsType()
export class MenuWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => MenuWhereInput, { nullable: true })
  where?: MenuWhereInput;
  @TypeGraphQLField(() => MenuOrderByEnum, { nullable: true })
  orderBy?: MenuOrderByEnum;
}

@ArgsType()
export class MenuCreateManyArgs {
  @TypeGraphQLField(() => [MenuCreateInput])
  data!: MenuCreateInput[];
}

@ArgsType()
export class MenuUpdateArgs {
  @TypeGraphQLField() data!: MenuUpdateInput;
  @TypeGraphQLField() where!: MenuWhereUniqueInput;
}

export enum WxAccountConfigOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  wechatId_ASC = "wechatId_ASC",
  wechatId_DESC = "wechatId_DESC",

  subMchId_ASC = "subMchId_ASC",
  subMchId_DESC = "subMchId_DESC",

  followReply_ASC = "followReply_ASC",
  followReply_DESC = "followReply_DESC",

  messageCallbackUrl_ASC = "messageCallbackUrl_ASC",
  messageCallbackUrl_DESC = "messageCallbackUrl_DESC"
}
registerEnumType(WxAccountConfigOrderByEnum, {
  name: "WxAccountConfigOrderByInput"
});

@TypeGraphQLInputType()
export class WxAccountConfigWhereInput extends BaseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  wechatId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  wechatId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  subMchId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  subMchId_in?: string[];

  @TypeGraphQLField({ nullable: true })
  followReply_eq?: string;
  @TypeGraphQLField({ nullable: true })
  followReply_contains?: string;
  @TypeGraphQLField({ nullable: true })
  followReply_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  followReply_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  followReply_in?: string[];

  @TypeGraphQLField({ nullable: true })
  messageCallbackUrl_eq?: string;
  @TypeGraphQLField({ nullable: true })
  messageCallbackUrl_contains?: string;
  @TypeGraphQLField({ nullable: true })
  messageCallbackUrl_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  messageCallbackUrl_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  messageCallbackUrl_in?: string[];
}

@TypeGraphQLInputType()
export class WxAccountConfigWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class WxAccountConfigCreateInput {
  @TypeGraphQLField()
  wechatId!: string;

  @TypeGraphQLField({ nullable: true })
  subMchId?: string;

  @TypeGraphQLField({ nullable: true })
  followReply?: string;

  @TypeGraphQLField({ nullable: true })
  messageCallbackUrl?: string;
}

@TypeGraphQLInputType()
export class WxAccountConfigUpdateInput {
  @TypeGraphQLField({ nullable: true })
  wechatId?: string;

  @TypeGraphQLField({ nullable: true })
  subMchId?: string;

  @TypeGraphQLField({ nullable: true })
  followReply?: string;

  @TypeGraphQLField({ nullable: true })
  messageCallbackUrl?: string;
}

@ArgsType()
export class WxAccountConfigWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => WxAccountConfigWhereInput, { nullable: true })
  where?: WxAccountConfigWhereInput;
  @TypeGraphQLField(() => WxAccountConfigOrderByEnum, { nullable: true })
  orderBy?: WxAccountConfigOrderByEnum;
}

@ArgsType()
export class WxAccountConfigCreateManyArgs {
  @TypeGraphQLField(() => [WxAccountConfigCreateInput])
  data!: WxAccountConfigCreateInput[];
}

@ArgsType()
export class WxAccountConfigUpdateArgs {
  @TypeGraphQLField() data!: WxAccountConfigUpdateInput;
  @TypeGraphQLField() where!: WxAccountConfigWhereUniqueInput;
}

export enum WxAccountOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  configId_ASC = "configId_ASC",
  configId_DESC = "configId_DESC",

  accountName_ASC = "accountName_ASC",
  accountName_DESC = "accountName_DESC",

  appId_ASC = "appId_ASC",
  appId_DESC = "appId_DESC",

  appSecret_ASC = "appSecret_ASC",
  appSecret_DESC = "appSecret_DESC",

  wechatId_ASC = "wechatId_ASC",
  wechatId_DESC = "wechatId_DESC",

  identityId_ASC = "identityId_ASC",
  identityId_DESC = "identityId_DESC",

  organizationId_ASC = "organizationId_ASC",
  organizationId_DESC = "organizationId_DESC"
}
registerEnumType(WxAccountOrderByEnum, {
  name: "WxAccountOrderByInput"
});

@TypeGraphQLInputType()
export class WxAccountWhereInput extends BaseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  configId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  configId_in?: string[];

  @TypeGraphQLField({ nullable: true })
  accountName_eq?: string;
  @TypeGraphQLField({ nullable: true })
  accountName_contains?: string;
  @TypeGraphQLField({ nullable: true })
  accountName_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  accountName_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  accountName_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  appId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  appId_in?: string[];

  @TypeGraphQLField({ nullable: true })
  appSecret_eq?: string;
  @TypeGraphQLField({ nullable: true })
  appSecret_contains?: string;
  @TypeGraphQLField({ nullable: true })
  appSecret_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  appSecret_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  appSecret_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  wechatId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  wechatId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  identityId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  identityId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  organizationId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  organizationId_in?: string[];
}

@TypeGraphQLInputType()
export class WxAccountWhereUniqueInput {
  @TypeGraphQLField(() => String, { nullable: true })
  id?: string;

  @TypeGraphQLField(() => ID, { nullable: true })
  configId?: string;
}

@TypeGraphQLInputType()
export class WxAccountCreateInput {
  @TypeGraphQLField()
  configId!: string;

  @TypeGraphQLField()
  accountName!: string;

  @TypeGraphQLField()
  appId!: string;

  @TypeGraphQLField()
  appSecret!: string;

  @TypeGraphQLField({ nullable: true })
  wechatId?: string;

  @TypeGraphQLField()
  identityId!: string;

  @TypeGraphQLField({ nullable: true })
  organizationId?: string;
}

@TypeGraphQLInputType()
export class WxAccountUpdateInput {
  @TypeGraphQLField({ nullable: true })
  configId?: string;

  @TypeGraphQLField({ nullable: true })
  accountName?: string;

  @TypeGraphQLField({ nullable: true })
  appId?: string;

  @TypeGraphQLField({ nullable: true })
  appSecret?: string;

  @TypeGraphQLField({ nullable: true })
  wechatId?: string;

  @TypeGraphQLField({ nullable: true })
  identityId?: string;

  @TypeGraphQLField({ nullable: true })
  organizationId?: string;
}

@ArgsType()
export class WxAccountWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => WxAccountWhereInput, { nullable: true })
  where?: WxAccountWhereInput;
  @TypeGraphQLField(() => WxAccountOrderByEnum, { nullable: true })
  orderBy?: WxAccountOrderByEnum;
}

@ArgsType()
export class WxAccountCreateManyArgs {
  @TypeGraphQLField(() => [WxAccountCreateInput])
  data!: WxAccountCreateInput[];
}

@ArgsType()
export class WxAccountUpdateArgs {
  @TypeGraphQLField() data!: WxAccountUpdateInput;
  @TypeGraphQLField() where!: WxAccountWhereUniqueInput;
}

export enum WxMessageTaskOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  batchCount_ASC = "batchCount_ASC",
  batchCount_DESC = "batchCount_DESC",

  params_ASC = "params_ASC",
  params_DESC = "params_DESC",

  executorId_ASC = "executorId_ASC",
  executorId_DESC = "executorId_DESC",

  type_ASC = "type_ASC",
  type_DESC = "type_DESC",

  isDelay_ASC = "isDelay_ASC",
  isDelay_DESC = "isDelay_DESC",

  planTime_ASC = "planTime_ASC",
  planTime_DESC = "planTime_DESC",

  progress_ASC = "progress_ASC",
  progress_DESC = "progress_DESC"
}
registerEnumType(WxMessageTaskOrderByEnum, {
  name: "WxMessageTaskOrderByInput"
});

@TypeGraphQLInputType()
export class WxMessageTaskWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  batchCount_eq?: number;
  @TypeGraphQLField({ nullable: true })
  batchCount_gt?: number;
  @TypeGraphQLField({ nullable: true })
  batchCount_gte?: number;
  @TypeGraphQLField({ nullable: true })
  batchCount_lt?: number;
  @TypeGraphQLField({ nullable: true })
  batchCount_lte?: number;
  @TypeGraphQLField(() => [Int], { nullable: true })
  batchCount_in?: number[];

  @TypeGraphQLField({ nullable: true })
  params_eq?: string;
  @TypeGraphQLField({ nullable: true })
  params_contains?: string;
  @TypeGraphQLField({ nullable: true })
  params_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  params_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  params_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  executorId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  executorId_in?: string[];

  @TypeGraphQLField(() => WxMsgTaskType, { nullable: true })
  type_eq?: WxMsgTaskType;
  @TypeGraphQLField(() => [WxMsgTaskType], { nullable: true })
  type_in?: WxMsgTaskType[];

  @TypeGraphQLField(() => WxMsgIsDelay, { nullable: true })
  isDelay_eq?: WxMsgIsDelay;
  @TypeGraphQLField(() => [WxMsgIsDelay], { nullable: true })
  isDelay_in?: WxMsgIsDelay[];

  @TypeGraphQLField({ nullable: true })
  planTime_gt?: Date;
  @TypeGraphQLField({ nullable: true })
  planTime_gte?: Date;
  @TypeGraphQLField({ nullable: true })
  planTime_lt?: Date;
  @TypeGraphQLField({ nullable: true })
  planTime_lte?: Date;

  @TypeGraphQLField(() => WxMsgTaskProgress, { nullable: true })
  progress_eq?: WxMsgTaskProgress;
  @TypeGraphQLField(() => [WxMsgTaskProgress], { nullable: true })
  progress_in?: WxMsgTaskProgress[];
}

@TypeGraphQLInputType()
export class WxMessageTaskWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class WxMessageTaskCreateInput {
  @TypeGraphQLField()
  batchCount!: number;

  @TypeGraphQLField()
  params!: string;

  @TypeGraphQLField()
  executorId!: string;

  @TypeGraphQLField(() => WxMsgTaskType)
  type!: WxMsgTaskType;

  @TypeGraphQLField(() => WxMsgIsDelay)
  isDelay!: WxMsgIsDelay;

  @TypeGraphQLField({ nullable: true })
  planTime?: Date;

  @TypeGraphQLField(() => WxMsgTaskProgress)
  progress!: WxMsgTaskProgress;
}

@TypeGraphQLInputType()
export class WxMessageTaskUpdateInput {
  @TypeGraphQLField({ nullable: true })
  batchCount?: number;

  @TypeGraphQLField({ nullable: true })
  params?: string;

  @TypeGraphQLField({ nullable: true })
  executorId?: string;

  @TypeGraphQLField(() => WxMsgTaskType, { nullable: true })
  type?: WxMsgTaskType;

  @TypeGraphQLField(() => WxMsgIsDelay, { nullable: true })
  isDelay?: WxMsgIsDelay;

  @TypeGraphQLField({ nullable: true })
  planTime?: Date;

  @TypeGraphQLField(() => WxMsgTaskProgress, { nullable: true })
  progress?: WxMsgTaskProgress;
}

@ArgsType()
export class WxMessageTaskWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => WxMessageTaskWhereInput, { nullable: true })
  where?: WxMessageTaskWhereInput;
  @TypeGraphQLField(() => WxMessageTaskOrderByEnum, { nullable: true })
  orderBy?: WxMessageTaskOrderByEnum;
}

@ArgsType()
export class WxMessageTaskCreateManyArgs {
  @TypeGraphQLField(() => [WxMessageTaskCreateInput])
  data!: WxMessageTaskCreateInput[];
}

@ArgsType()
export class WxMessageTaskUpdateArgs {
  @TypeGraphQLField() data!: WxMessageTaskUpdateInput;
  @TypeGraphQLField() where!: WxMessageTaskWhereUniqueInput;
}

export enum WxTemplateMessageOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  msgId_ASC = "msgId_ASC",
  msgId_DESC = "msgId_DESC",

  tempMsgId_ASC = "tempMsgId_ASC",
  tempMsgId_DESC = "tempMsgId_DESC",

  openid_ASC = "openid_ASC",
  openid_DESC = "openid_DESC",

  unionid_ASC = "unionid_ASC",
  unionid_DESC = "unionid_DESC",

  templateId_ASC = "templateId_ASC",
  templateId_DESC = "templateId_DESC",

  url_ASC = "url_ASC",
  url_DESC = "url_DESC",

  color_ASC = "color_ASC",
  color_DESC = "color_DESC",

  miniprogramAppId_ASC = "miniprogramAppId_ASC",
  miniprogramAppId_DESC = "miniprogramAppId_DESC",

  miniprogramPagepath_ASC = "miniprogramPagepath_ASC",
  miniprogramPagepath_DESC = "miniprogramPagepath_DESC",

  data_ASC = "data_ASC",
  data_DESC = "data_DESC",

  executorId_ASC = "executorId_ASC",
  executorId_DESC = "executorId_DESC",

  messageTaskId_ASC = "messageTaskId_ASC",
  messageTaskId_DESC = "messageTaskId_DESC",

  status_ASC = "status_ASC",
  status_DESC = "status_DESC",

  failReason_ASC = "failReason_ASC",
  failReason_DESC = "failReason_DESC"
}
registerEnumType(WxTemplateMessageOrderByEnum, {
  name: "WxTemplateMessageOrderByInput"
});

@TypeGraphQLInputType()
export class WxTemplateMessageWhereInput extends BaseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  msgId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  msgId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  tempMsgId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  tempMsgId_in?: string[];

  @TypeGraphQLField({ nullable: true })
  openid_eq?: string;
  @TypeGraphQLField({ nullable: true })
  openid_contains?: string;
  @TypeGraphQLField({ nullable: true })
  openid_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  openid_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  openid_in?: string[];

  @TypeGraphQLField({ nullable: true })
  unionid_eq?: string;
  @TypeGraphQLField({ nullable: true })
  unionid_contains?: string;
  @TypeGraphQLField({ nullable: true })
  unionid_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  unionid_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  unionid_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  templateId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  templateId_in?: string[];

  @TypeGraphQLField({ nullable: true })
  url_eq?: string;
  @TypeGraphQLField({ nullable: true })
  url_contains?: string;
  @TypeGraphQLField({ nullable: true })
  url_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  url_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  url_in?: string[];

  @TypeGraphQLField({ nullable: true })
  color_eq?: string;
  @TypeGraphQLField({ nullable: true })
  color_contains?: string;
  @TypeGraphQLField({ nullable: true })
  color_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  color_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  color_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  miniprogramAppId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  miniprogramAppId_in?: string[];

  @TypeGraphQLField({ nullable: true })
  miniprogramPagepath_eq?: string;
  @TypeGraphQLField({ nullable: true })
  miniprogramPagepath_contains?: string;
  @TypeGraphQLField({ nullable: true })
  miniprogramPagepath_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  miniprogramPagepath_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  miniprogramPagepath_in?: string[];

  @TypeGraphQLField({ nullable: true })
  data_eq?: string;
  @TypeGraphQLField({ nullable: true })
  data_contains?: string;
  @TypeGraphQLField({ nullable: true })
  data_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  data_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  data_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  executorId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  executorId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  messageTaskId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  messageTaskId_in?: string[];

  @TypeGraphQLField(() => WxTmPushStatus, { nullable: true })
  status_eq?: WxTmPushStatus;
  @TypeGraphQLField(() => [WxTmPushStatus], { nullable: true })
  status_in?: WxTmPushStatus[];

  @TypeGraphQLField({ nullable: true })
  failReason_eq?: string;
  @TypeGraphQLField({ nullable: true })
  failReason_contains?: string;
  @TypeGraphQLField({ nullable: true })
  failReason_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  failReason_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  failReason_in?: string[];
}

@TypeGraphQLInputType()
export class WxTemplateMessageWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class WxTemplateMessageCreateInput {
  @TypeGraphQLField({ nullable: true })
  msgId?: string;

  @TypeGraphQLField({ nullable: true })
  tempMsgId?: string;

  @TypeGraphQLField({ nullable: true })
  openid?: string;

  @TypeGraphQLField({ nullable: true })
  unionid?: string;

  @TypeGraphQLField()
  templateId!: string;

  @TypeGraphQLField({ nullable: true })
  url?: string;

  @TypeGraphQLField({ nullable: true })
  color?: string;

  @TypeGraphQLField({ nullable: true })
  miniprogramAppId?: string;

  @TypeGraphQLField({ nullable: true })
  miniprogramPagepath?: string;

  @TypeGraphQLField()
  data!: string;

  @TypeGraphQLField()
  executorId!: string;

  @TypeGraphQLField()
  messageTaskId!: string;

  @TypeGraphQLField(() => WxTmPushStatus)
  status!: WxTmPushStatus;

  @TypeGraphQLField({ nullable: true })
  failReason?: string;
}

@TypeGraphQLInputType()
export class WxTemplateMessageUpdateInput {
  @TypeGraphQLField({ nullable: true })
  msgId?: string;

  @TypeGraphQLField({ nullable: true })
  tempMsgId?: string;

  @TypeGraphQLField({ nullable: true })
  openid?: string;

  @TypeGraphQLField({ nullable: true })
  unionid?: string;

  @TypeGraphQLField({ nullable: true })
  templateId?: string;

  @TypeGraphQLField({ nullable: true })
  url?: string;

  @TypeGraphQLField({ nullable: true })
  color?: string;

  @TypeGraphQLField({ nullable: true })
  miniprogramAppId?: string;

  @TypeGraphQLField({ nullable: true })
  miniprogramPagepath?: string;

  @TypeGraphQLField({ nullable: true })
  data?: string;

  @TypeGraphQLField({ nullable: true })
  executorId?: string;

  @TypeGraphQLField({ nullable: true })
  messageTaskId?: string;

  @TypeGraphQLField(() => WxTmPushStatus, { nullable: true })
  status?: WxTmPushStatus;

  @TypeGraphQLField({ nullable: true })
  failReason?: string;
}

@ArgsType()
export class WxTemplateMessageWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => WxTemplateMessageWhereInput, { nullable: true })
  where?: WxTemplateMessageWhereInput;
  @TypeGraphQLField(() => WxTemplateMessageOrderByEnum, { nullable: true })
  orderBy?: WxTemplateMessageOrderByEnum;
}

@ArgsType()
export class WxTemplateMessageCreateManyArgs {
  @TypeGraphQLField(() => [WxTemplateMessageCreateInput])
  data!: WxTemplateMessageCreateInput[];
}

@ArgsType()
export class WxTemplateMessageUpdateArgs {
  @TypeGraphQLField() data!: WxTemplateMessageUpdateInput;
  @TypeGraphQLField() where!: WxTemplateMessageWhereUniqueInput;
}

export enum WxWechatUserOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  openid_ASC = "openid_ASC",
  openid_DESC = "openid_DESC",

  unionid_ASC = "unionid_ASC",
  unionid_DESC = "unionid_DESC",

  nickname_ASC = "nickname_ASC",
  nickname_DESC = "nickname_DESC",

  sex_ASC = "sex_ASC",
  sex_DESC = "sex_DESC",

  headimgurl_ASC = "headimgurl_ASC",
  headimgurl_DESC = "headimgurl_DESC",

  subscribe_ASC = "subscribe_ASC",
  subscribe_DESC = "subscribe_DESC",

  subscribeTime_ASC = "subscribeTime_ASC",
  subscribeTime_DESC = "subscribeTime_DESC",

  wechatId_ASC = "wechatId_ASC",
  wechatId_DESC = "wechatId_DESC"
}
registerEnumType(WxWechatUserOrderByEnum, {
  name: "WxWechatUserOrderByInput"
});

@TypeGraphQLInputType()
export class WxWechatUserWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  openid_eq?: string;
  @TypeGraphQLField({ nullable: true })
  openid_contains?: string;
  @TypeGraphQLField({ nullable: true })
  openid_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  openid_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  openid_in?: string[];

  @TypeGraphQLField({ nullable: true })
  unionid_eq?: string;
  @TypeGraphQLField({ nullable: true })
  unionid_contains?: string;
  @TypeGraphQLField({ nullable: true })
  unionid_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  unionid_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  unionid_in?: string[];

  @TypeGraphQLField({ nullable: true })
  nickname_eq?: string;
  @TypeGraphQLField({ nullable: true })
  nickname_contains?: string;
  @TypeGraphQLField({ nullable: true })
  nickname_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  nickname_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  nickname_in?: string[];

  @TypeGraphQLField(() => WxWechatUserSex, { nullable: true })
  sex_eq?: WxWechatUserSex;
  @TypeGraphQLField(() => [WxWechatUserSex], { nullable: true })
  sex_in?: WxWechatUserSex[];

  @TypeGraphQLField({ nullable: true })
  headimgurl_eq?: string;
  @TypeGraphQLField({ nullable: true })
  headimgurl_contains?: string;
  @TypeGraphQLField({ nullable: true })
  headimgurl_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  headimgurl_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  headimgurl_in?: string[];

  @TypeGraphQLField(() => WxWechatUserSubscribe, { nullable: true })
  subscribe_eq?: WxWechatUserSubscribe;
  @TypeGraphQLField(() => [WxWechatUserSubscribe], { nullable: true })
  subscribe_in?: WxWechatUserSubscribe[];

  @TypeGraphQLField({ nullable: true })
  subscribeTime_gt?: Date;
  @TypeGraphQLField({ nullable: true })
  subscribeTime_gte?: Date;
  @TypeGraphQLField({ nullable: true })
  subscribeTime_lt?: Date;
  @TypeGraphQLField({ nullable: true })
  subscribeTime_lte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  wechatId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  wechatId_in?: string[];
}

@TypeGraphQLInputType()
export class WxWechatUserWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class WxWechatUserCreateInput {
  @TypeGraphQLField()
  openid!: string;

  @TypeGraphQLField()
  unionid!: string;

  @TypeGraphQLField({ nullable: true })
  nickname?: string;

  @TypeGraphQLField(() => WxWechatUserSex)
  sex!: WxWechatUserSex;

  @TypeGraphQLField({ nullable: true })
  headimgurl?: string;

  @TypeGraphQLField(() => WxWechatUserSubscribe)
  subscribe!: WxWechatUserSubscribe;

  @TypeGraphQLField({ nullable: true })
  subscribeTime?: Date;

  @TypeGraphQLField({ nullable: true })
  wechatId?: string;
}

@TypeGraphQLInputType()
export class WxWechatUserUpdateInput {
  @TypeGraphQLField({ nullable: true })
  openid?: string;

  @TypeGraphQLField({ nullable: true })
  unionid?: string;

  @TypeGraphQLField({ nullable: true })
  nickname?: string;

  @TypeGraphQLField(() => WxWechatUserSex, { nullable: true })
  sex?: WxWechatUserSex;

  @TypeGraphQLField({ nullable: true })
  headimgurl?: string;

  @TypeGraphQLField(() => WxWechatUserSubscribe, { nullable: true })
  subscribe?: WxWechatUserSubscribe;

  @TypeGraphQLField({ nullable: true })
  subscribeTime?: Date;

  @TypeGraphQLField({ nullable: true })
  wechatId?: string;
}

@ArgsType()
export class WxWechatUserWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => WxWechatUserWhereInput, { nullable: true })
  where?: WxWechatUserWhereInput;
  @TypeGraphQLField(() => WxWechatUserOrderByEnum, { nullable: true })
  orderBy?: WxWechatUserOrderByEnum;
}

@ArgsType()
export class WxWechatUserCreateManyArgs {
  @TypeGraphQLField(() => [WxWechatUserCreateInput])
  data!: WxWechatUserCreateInput[];
}

@ArgsType()
export class WxWechatUserUpdateArgs {
  @TypeGraphQLField() data!: WxWechatUserUpdateInput;
  @TypeGraphQLField() where!: WxWechatUserWhereUniqueInput;
}

export enum ThirdPartyAuthOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC",

  appId_ASC = "appId_ASC",
  appId_DESC = "appId_DESC",

  appSecret_ASC = "appSecret_ASC",
  appSecret_DESC = "appSecret_DESC",

  remark_ASC = "remark_ASC",
  remark_DESC = "remark_DESC",

  schools_ASC = "schools_ASC",
  schools_DESC = "schools_DESC",

  tokenExpireTime_ASC = "tokenExpireTime_ASC",
  tokenExpireTime_DESC = "tokenExpireTime_DESC",

  status_ASC = "status_ASC",
  status_DESC = "status_DESC"
}
registerEnumType(ThirdPartyAuthOrderByEnum, {
  name: "ThirdPartyAuthOrderByInput"
});

@TypeGraphQLInputType()
export class ThirdPartyAuthWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  name_eq?: string;
  @TypeGraphQLField({ nullable: true })
  name_contains?: string;
  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  appId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  appId_in?: string[];

  @TypeGraphQLField({ nullable: true })
  appSecret_eq?: string;
  @TypeGraphQLField({ nullable: true })
  appSecret_contains?: string;
  @TypeGraphQLField({ nullable: true })
  appSecret_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  appSecret_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  appSecret_in?: string[];

  @TypeGraphQLField({ nullable: true })
  remark_eq?: string;
  @TypeGraphQLField({ nullable: true })
  remark_contains?: string;
  @TypeGraphQLField({ nullable: true })
  remark_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  remark_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  remark_in?: string[];

  @TypeGraphQLField({ nullable: true })
  schools_eq?: string;
  @TypeGraphQLField({ nullable: true })
  schools_contains?: string;
  @TypeGraphQLField({ nullable: true })
  schools_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  schools_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  schools_in?: string[];

  @TypeGraphQLField({ nullable: true })
  tokenExpireTime_eq?: number;
  @TypeGraphQLField({ nullable: true })
  tokenExpireTime_gt?: number;
  @TypeGraphQLField({ nullable: true })
  tokenExpireTime_gte?: number;
  @TypeGraphQLField({ nullable: true })
  tokenExpireTime_lt?: number;
  @TypeGraphQLField({ nullable: true })
  tokenExpireTime_lte?: number;
  @TypeGraphQLField(() => [Int], { nullable: true })
  tokenExpireTime_in?: number[];

  @TypeGraphQLField(() => ThirdPartyAuthStatus, { nullable: true })
  status_eq?: ThirdPartyAuthStatus;
  @TypeGraphQLField(() => [ThirdPartyAuthStatus], { nullable: true })
  status_in?: ThirdPartyAuthStatus[];
}

@TypeGraphQLInputType()
export class ThirdPartyAuthWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class ThirdPartyAuthCreateInput {
  @TypeGraphQLField()
  name!: string;

  @TypeGraphQLField()
  appId!: string;

  @TypeGraphQLField()
  appSecret!: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField({ nullable: true })
  schools?: string;

  @TypeGraphQLField({ nullable: true })
  tokenExpireTime?: number;

  @TypeGraphQLField(() => ThirdPartyAuthStatus)
  status!: ThirdPartyAuthStatus;
}

@TypeGraphQLInputType()
export class ThirdPartyAuthUpdateInput {
  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  appId?: string;

  @TypeGraphQLField({ nullable: true })
  appSecret?: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField({ nullable: true })
  schools?: string;

  @TypeGraphQLField({ nullable: true })
  tokenExpireTime?: number;

  @TypeGraphQLField(() => ThirdPartyAuthStatus, { nullable: true })
  status?: ThirdPartyAuthStatus;
}

@ArgsType()
export class ThirdPartyAuthWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => ThirdPartyAuthWhereInput, { nullable: true })
  where?: ThirdPartyAuthWhereInput;
  @TypeGraphQLField(() => ThirdPartyAuthOrderByEnum, { nullable: true })
  orderBy?: ThirdPartyAuthOrderByEnum;
}

@ArgsType()
export class ThirdPartyAuthCreateManyArgs {
  @TypeGraphQLField(() => [ThirdPartyAuthCreateInput])
  data!: ThirdPartyAuthCreateInput[];
}

@ArgsType()
export class ThirdPartyAuthUpdateArgs {
  @TypeGraphQLField() data!: ThirdPartyAuthUpdateInput;
  @TypeGraphQLField() where!: ThirdPartyAuthWhereUniqueInput;
}

export enum WxTemplateSettingOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  templateId_ASC = "templateId_ASC",
  templateId_DESC = "templateId_DESC",

  templateShortId_ASC = "templateShortId_ASC",
  templateShortId_DESC = "templateShortId_DESC",

  appId_ASC = "appId_ASC",
  appId_DESC = "appId_DESC",

  templateName_ASC = "templateName_ASC",
  templateName_DESC = "templateName_DESC"
}
registerEnumType(WxTemplateSettingOrderByEnum, {
  name: "WxTemplateSettingOrderByInput"
});

@TypeGraphQLInputType()
export class WxTemplateSettingWhereInput extends BaseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  templateId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  templateId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  templateShortId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  templateShortId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  appId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  appId_in?: string[];

  @TypeGraphQLField({ nullable: true })
  templateName_eq?: string;
  @TypeGraphQLField({ nullable: true })
  templateName_contains?: string;
  @TypeGraphQLField({ nullable: true })
  templateName_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  templateName_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  templateName_in?: string[];
}

@TypeGraphQLInputType()
export class WxTemplateSettingWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class WxTemplateSettingCreateInput {
  @TypeGraphQLField()
  templateId!: string;

  @TypeGraphQLField()
  templateShortId!: string;

  @TypeGraphQLField()
  appId!: string;

  @TypeGraphQLField()
  templateName!: string;
}

@TypeGraphQLInputType()
export class WxTemplateSettingUpdateInput {
  @TypeGraphQLField({ nullable: true })
  templateId?: string;

  @TypeGraphQLField({ nullable: true })
  templateShortId?: string;

  @TypeGraphQLField({ nullable: true })
  appId?: string;

  @TypeGraphQLField({ nullable: true })
  templateName?: string;
}

@ArgsType()
export class WxTemplateSettingWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => WxTemplateSettingWhereInput, { nullable: true })
  where?: WxTemplateSettingWhereInput;
  @TypeGraphQLField(() => WxTemplateSettingOrderByEnum, { nullable: true })
  orderBy?: WxTemplateSettingOrderByEnum;
}

@ArgsType()
export class WxTemplateSettingCreateManyArgs {
  @TypeGraphQLField(() => [WxTemplateSettingCreateInput])
  data!: WxTemplateSettingCreateInput[];
}

@ArgsType()
export class WxTemplateSettingUpdateArgs {
  @TypeGraphQLField() data!: WxTemplateSettingUpdateInput;
  @TypeGraphQLField() where!: WxTemplateSettingWhereUniqueInput;
}

export enum WxTemplateLibraryOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  templateShortId_ASC = "templateShortId_ASC",
  templateShortId_DESC = "templateShortId_DESC",

  templateName_ASC = "templateName_ASC",
  templateName_DESC = "templateName_DESC"
}
registerEnumType(WxTemplateLibraryOrderByEnum, {
  name: "WxTemplateLibraryOrderByInput"
});

@TypeGraphQLInputType()
export class WxTemplateLibraryWhereInput extends BaseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  templateShortId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  templateShortId_in?: string[];

  @TypeGraphQLField({ nullable: true })
  templateName_eq?: string;
  @TypeGraphQLField({ nullable: true })
  templateName_contains?: string;
  @TypeGraphQLField({ nullable: true })
  templateName_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  templateName_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  templateName_in?: string[];
}

@TypeGraphQLInputType()
export class WxTemplateLibraryWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class WxTemplateLibraryCreateInput {
  @TypeGraphQLField()
  templateShortId!: string;

  @TypeGraphQLField()
  templateName!: string;
}

@TypeGraphQLInputType()
export class WxTemplateLibraryUpdateInput {
  @TypeGraphQLField({ nullable: true })
  templateShortId?: string;

  @TypeGraphQLField({ nullable: true })
  templateName?: string;
}

@ArgsType()
export class WxTemplateLibraryWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => WxTemplateLibraryWhereInput, { nullable: true })
  where?: WxTemplateLibraryWhereInput;
  @TypeGraphQLField(() => WxTemplateLibraryOrderByEnum, { nullable: true })
  orderBy?: WxTemplateLibraryOrderByEnum;
}

@ArgsType()
export class WxTemplateLibraryCreateManyArgs {
  @TypeGraphQLField(() => [WxTemplateLibraryCreateInput])
  data!: WxTemplateLibraryCreateInput[];
}

@ArgsType()
export class WxTemplateLibraryUpdateArgs {
  @TypeGraphQLField() data!: WxTemplateLibraryUpdateInput;
  @TypeGraphQLField() where!: WxTemplateLibraryWhereUniqueInput;
}

export enum K12PowerCategoryOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC",

  code_ASC = "code_ASC",
  code_DESC = "code_DESC",

  remark_ASC = "remark_ASC",
  remark_DESC = "remark_DESC",

  type_ASC = "type_ASC",
  type_DESC = "type_DESC",

  status_ASC = "status_ASC",
  status_DESC = "status_DESC",

  applicationId_ASC = "applicationId_ASC",
  applicationId_DESC = "applicationId_DESC"
}
registerEnumType(K12PowerCategoryOrderByEnum, {
  name: "K12PowerCategoryOrderByInput"
});

@TypeGraphQLInputType()
export class K12PowerCategoryWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  name_eq?: string;
  @TypeGraphQLField({ nullable: true })
  name_contains?: string;
  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];

  @TypeGraphQLField({ nullable: true })
  code_eq?: string;
  @TypeGraphQLField({ nullable: true })
  code_contains?: string;
  @TypeGraphQLField({ nullable: true })
  code_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  code_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  code_in?: string[];

  @TypeGraphQLField({ nullable: true })
  remark_eq?: string;
  @TypeGraphQLField({ nullable: true })
  remark_contains?: string;
  @TypeGraphQLField({ nullable: true })
  remark_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  remark_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  remark_in?: string[];

  @TypeGraphQLField(() => K12PowerCategoryType, { nullable: true })
  type_eq?: K12PowerCategoryType;
  @TypeGraphQLField(() => [K12PowerCategoryType], { nullable: true })
  type_in?: K12PowerCategoryType[];

  @TypeGraphQLField(() => K12PowerCategoryStatus, { nullable: true })
  status_eq?: K12PowerCategoryStatus;
  @TypeGraphQLField(() => [K12PowerCategoryStatus], { nullable: true })
  status_in?: K12PowerCategoryStatus[];

  @TypeGraphQLField(() => ID, { nullable: true })
  applicationId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  applicationId_in?: string[];
}

@TypeGraphQLInputType()
export class K12PowerCategoryWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class K12PowerCategoryCreateInput {
  @TypeGraphQLField()
  name!: string;

  @TypeGraphQLField()
  code!: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField(() => K12PowerCategoryType)
  type!: K12PowerCategoryType;

  @TypeGraphQLField(() => K12PowerCategoryStatus)
  status!: K12PowerCategoryStatus;

  @TypeGraphQLField({ nullable: true })
  applicationId?: string;
}

@TypeGraphQLInputType()
export class K12PowerCategoryUpdateInput {
  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  code?: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField(() => K12PowerCategoryType, { nullable: true })
  type?: K12PowerCategoryType;

  @TypeGraphQLField(() => K12PowerCategoryStatus, { nullable: true })
  status?: K12PowerCategoryStatus;

  @TypeGraphQLField({ nullable: true })
  applicationId?: string;
}

@ArgsType()
export class K12PowerCategoryWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => K12PowerCategoryWhereInput, { nullable: true })
  where?: K12PowerCategoryWhereInput;
  @TypeGraphQLField(() => K12PowerCategoryOrderByEnum, { nullable: true })
  orderBy?: K12PowerCategoryOrderByEnum;
}

@ArgsType()
export class K12PowerCategoryCreateManyArgs {
  @TypeGraphQLField(() => [K12PowerCategoryCreateInput])
  data!: K12PowerCategoryCreateInput[];
}

@ArgsType()
export class K12PowerCategoryUpdateArgs {
  @TypeGraphQLField() data!: K12PowerCategoryUpdateInput;
  @TypeGraphQLField() where!: K12PowerCategoryWhereUniqueInput;
}

export enum K12PowerOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC",

  code_ASC = "code_ASC",
  code_DESC = "code_DESC",

  path_ASC = "path_ASC",
  path_DESC = "path_DESC",

  icon_ASC = "icon_ASC",
  icon_DESC = "icon_DESC",

  remark_ASC = "remark_ASC",
  remark_DESC = "remark_DESC",

  order_ASC = "order_ASC",
  order_DESC = "order_DESC",

  status_ASC = "status_ASC",
  status_DESC = "status_DESC",

  superiorId_ASC = "superiorId_ASC",
  superiorId_DESC = "superiorId_DESC",

  categoryId_ASC = "categoryId_ASC",
  categoryId_DESC = "categoryId_DESC"
}
registerEnumType(K12PowerOrderByEnum, {
  name: "K12PowerOrderByInput"
});

@TypeGraphQLInputType()
export class K12PowerWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  name_eq?: string;
  @TypeGraphQLField({ nullable: true })
  name_contains?: string;
  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];

  @TypeGraphQLField({ nullable: true })
  code_eq?: string;
  @TypeGraphQLField({ nullable: true })
  code_contains?: string;
  @TypeGraphQLField({ nullable: true })
  code_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  code_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  code_in?: string[];

  @TypeGraphQLField({ nullable: true })
  path_eq?: string;
  @TypeGraphQLField({ nullable: true })
  path_contains?: string;
  @TypeGraphQLField({ nullable: true })
  path_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  path_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  path_in?: string[];

  @TypeGraphQLField({ nullable: true })
  icon_eq?: string;
  @TypeGraphQLField({ nullable: true })
  icon_contains?: string;
  @TypeGraphQLField({ nullable: true })
  icon_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  icon_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  icon_in?: string[];

  @TypeGraphQLField({ nullable: true })
  remark_eq?: string;
  @TypeGraphQLField({ nullable: true })
  remark_contains?: string;
  @TypeGraphQLField({ nullable: true })
  remark_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  remark_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  remark_in?: string[];

  @TypeGraphQLField({ nullable: true })
  order_eq?: number;
  @TypeGraphQLField({ nullable: true })
  order_gt?: number;
  @TypeGraphQLField({ nullable: true })
  order_gte?: number;
  @TypeGraphQLField({ nullable: true })
  order_lt?: number;
  @TypeGraphQLField({ nullable: true })
  order_lte?: number;
  @TypeGraphQLField(() => [Int], { nullable: true })
  order_in?: number[];

  @TypeGraphQLField(() => K12PowerStatus, { nullable: true })
  status_eq?: K12PowerStatus;
  @TypeGraphQLField(() => [K12PowerStatus], { nullable: true })
  status_in?: K12PowerStatus[];

  @TypeGraphQLField(() => ID, { nullable: true })
  superiorId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  superiorId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  categoryId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  categoryId_in?: string[];
}

@TypeGraphQLInputType()
export class K12PowerWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class K12PowerCreateInput {
  @TypeGraphQLField()
  name!: string;

  @TypeGraphQLField()
  code!: string;

  @TypeGraphQLField({ nullable: true })
  path?: string;

  @TypeGraphQLField({ nullable: true })
  icon?: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField()
  order!: number;

  @TypeGraphQLField(() => K12PowerStatus)
  status!: K12PowerStatus;

  @TypeGraphQLField({ nullable: true })
  superiorId?: string;

  @TypeGraphQLField()
  categoryId!: string;
}

@TypeGraphQLInputType()
export class K12PowerUpdateInput {
  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  code?: string;

  @TypeGraphQLField({ nullable: true })
  path?: string;

  @TypeGraphQLField({ nullable: true })
  icon?: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField({ nullable: true })
  order?: number;

  @TypeGraphQLField(() => K12PowerStatus, { nullable: true })
  status?: K12PowerStatus;

  @TypeGraphQLField({ nullable: true })
  superiorId?: string;

  @TypeGraphQLField({ nullable: true })
  categoryId?: string;
}

@ArgsType()
export class K12PowerWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => K12PowerWhereInput, { nullable: true })
  where?: K12PowerWhereInput;
  @TypeGraphQLField(() => K12PowerOrderByEnum, { nullable: true })
  orderBy?: K12PowerOrderByEnum;
}

@ArgsType()
export class K12PowerCreateManyArgs {
  @TypeGraphQLField(() => [K12PowerCreateInput])
  data!: K12PowerCreateInput[];
}

@ArgsType()
export class K12PowerUpdateArgs {
  @TypeGraphQLField() data!: K12PowerUpdateInput;
  @TypeGraphQLField() where!: K12PowerWhereUniqueInput;
}

export enum K12PowerModuleMappingOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  moduleId_ASC = "moduleId_ASC",
  moduleId_DESC = "moduleId_DESC",

  powerId_ASC = "powerId_ASC",
  powerId_DESC = "powerId_DESC"
}
registerEnumType(K12PowerModuleMappingOrderByEnum, {
  name: "K12PowerModuleMappingOrderByInput"
});

@TypeGraphQLInputType()
export class K12PowerModuleMappingWhereInput extends BaseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  moduleId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  moduleId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  powerId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  powerId_in?: string[];
}

@TypeGraphQLInputType()
export class K12PowerModuleMappingWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class K12PowerModuleMappingCreateInput {
  @TypeGraphQLField()
  moduleId!: string;

  @TypeGraphQLField()
  powerId!: string;
}

@TypeGraphQLInputType()
export class K12PowerModuleMappingUpdateInput {
  @TypeGraphQLField({ nullable: true })
  moduleId?: string;

  @TypeGraphQLField({ nullable: true })
  powerId?: string;
}

@ArgsType()
export class K12PowerModuleMappingWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => K12PowerModuleMappingWhereInput, { nullable: true })
  where?: K12PowerModuleMappingWhereInput;
  @TypeGraphQLField(() => K12PowerModuleMappingOrderByEnum, { nullable: true })
  orderBy?: K12PowerModuleMappingOrderByEnum;
}

@ArgsType()
export class K12PowerModuleMappingCreateManyArgs {
  @TypeGraphQLField(() => [K12PowerModuleMappingCreateInput])
  data!: K12PowerModuleMappingCreateInput[];
}

@ArgsType()
export class K12PowerModuleMappingUpdateArgs {
  @TypeGraphQLField() data!: K12PowerModuleMappingUpdateInput;
  @TypeGraphQLField() where!: K12PowerModuleMappingWhereUniqueInput;
}

export enum K12UserModuleGroupMappingOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  expireTime_ASC = "expireTime_ASC",
  expireTime_DESC = "expireTime_DESC",

  userId_ASC = "userId_ASC",
  userId_DESC = "userId_DESC",

  moduleGroupId_ASC = "moduleGroupId_ASC",
  moduleGroupId_DESC = "moduleGroupId_DESC"
}
registerEnumType(K12UserModuleGroupMappingOrderByEnum, {
  name: "K12UserModuleGroupMappingOrderByInput"
});

@TypeGraphQLInputType()
export class K12UserModuleGroupMappingWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  expireTime_gt?: Date;
  @TypeGraphQLField({ nullable: true })
  expireTime_gte?: Date;
  @TypeGraphQLField({ nullable: true })
  expireTime_lt?: Date;
  @TypeGraphQLField({ nullable: true })
  expireTime_lte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  userId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  userId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  moduleGroupId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  moduleGroupId_in?: string[];
}

@TypeGraphQLInputType()
export class K12UserModuleGroupMappingWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class K12UserModuleGroupMappingCreateInput {
  @TypeGraphQLField({ nullable: true })
  expireTime?: Date;

  @TypeGraphQLField()
  userId!: string;

  @TypeGraphQLField()
  moduleGroupId!: string;
}

@TypeGraphQLInputType()
export class K12UserModuleGroupMappingUpdateInput {
  @TypeGraphQLField({ nullable: true })
  expireTime?: Date;

  @TypeGraphQLField({ nullable: true })
  userId?: string;

  @TypeGraphQLField({ nullable: true })
  moduleGroupId?: string;
}

@ArgsType()
export class K12UserModuleGroupMappingWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => K12UserModuleGroupMappingWhereInput, {
    nullable: true
  })
  where?: K12UserModuleGroupMappingWhereInput;
  @TypeGraphQLField(() => K12UserModuleGroupMappingOrderByEnum, {
    nullable: true
  })
  orderBy?: K12UserModuleGroupMappingOrderByEnum;
}

@ArgsType()
export class K12UserModuleGroupMappingCreateManyArgs {
  @TypeGraphQLField(() => [K12UserModuleGroupMappingCreateInput])
  data!: K12UserModuleGroupMappingCreateInput[];
}

@ArgsType()
export class K12UserModuleGroupMappingUpdateArgs {
  @TypeGraphQLField() data!: K12UserModuleGroupMappingUpdateInput;
  @TypeGraphQLField() where!: K12UserModuleGroupMappingWhereUniqueInput;
}

export enum K12RoleGroupOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC",

  code_ASC = "code_ASC",
  code_DESC = "code_DESC",

  remark_ASC = "remark_ASC",
  remark_DESC = "remark_DESC",

  schoolId_ASC = "schoolId_ASC",
  schoolId_DESC = "schoolId_DESC",

  moduleCategoryIds_ASC = "moduleCategoryIds_ASC",
  moduleCategoryIds_DESC = "moduleCategoryIds_DESC",

  originalId_ASC = "originalId_ASC",
  originalId_DESC = "originalId_DESC"
}
registerEnumType(K12RoleGroupOrderByEnum, {
  name: "K12RoleGroupOrderByInput"
});

@TypeGraphQLInputType()
export class K12RoleGroupWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  name_eq?: string;
  @TypeGraphQLField({ nullable: true })
  name_contains?: string;
  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];

  @TypeGraphQLField({ nullable: true })
  code_eq?: string;
  @TypeGraphQLField({ nullable: true })
  code_contains?: string;
  @TypeGraphQLField({ nullable: true })
  code_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  code_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  code_in?: string[];

  @TypeGraphQLField({ nullable: true })
  remark_eq?: string;
  @TypeGraphQLField({ nullable: true })
  remark_contains?: string;
  @TypeGraphQLField({ nullable: true })
  remark_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  remark_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  remark_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  schoolId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  schoolId_in?: string[];

  @TypeGraphQLField({ nullable: true })
  moduleCategoryIds_eq?: string;
  @TypeGraphQLField({ nullable: true })
  moduleCategoryIds_contains?: string;
  @TypeGraphQLField({ nullable: true })
  moduleCategoryIds_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  moduleCategoryIds_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  moduleCategoryIds_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  originalId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  originalId_in?: string[];
}

@TypeGraphQLInputType()
export class K12RoleGroupWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class K12RoleGroupCreateInput {
  @TypeGraphQLField()
  name!: string;

  @TypeGraphQLField()
  code!: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField()
  schoolId!: string;

  @TypeGraphQLField({ nullable: true })
  moduleCategoryIds?: string;

  @TypeGraphQLField({ nullable: true })
  originalId?: string;
}

@TypeGraphQLInputType()
export class K12RoleGroupUpdateInput {
  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  code?: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField({ nullable: true })
  schoolId?: string;

  @TypeGraphQLField({ nullable: true })
  moduleCategoryIds?: string;

  @TypeGraphQLField({ nullable: true })
  originalId?: string;
}

@ArgsType()
export class K12RoleGroupWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => K12RoleGroupWhereInput, { nullable: true })
  where?: K12RoleGroupWhereInput;
  @TypeGraphQLField(() => K12RoleGroupOrderByEnum, { nullable: true })
  orderBy?: K12RoleGroupOrderByEnum;
}

@ArgsType()
export class K12RoleGroupCreateManyArgs {
  @TypeGraphQLField(() => [K12RoleGroupCreateInput])
  data!: K12RoleGroupCreateInput[];
}

@ArgsType()
export class K12RoleGroupUpdateArgs {
  @TypeGraphQLField() data!: K12RoleGroupUpdateInput;
  @TypeGraphQLField() where!: K12RoleGroupWhereUniqueInput;
}

export enum K12ModuleGroupOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC",

  code_ASC = "code_ASC",
  code_DESC = "code_DESC",

  remark_ASC = "remark_ASC",
  remark_DESC = "remark_DESC",

  level_ASC = "level_ASC",
  level_DESC = "level_DESC",

  schoolId_ASC = "schoolId_ASC",
  schoolId_DESC = "schoolId_DESC",

  status_ASC = "status_ASC",
  status_DESC = "status_DESC",

  systemDefault_ASC = "systemDefault_ASC",
  systemDefault_DESC = "systemDefault_DESC",

  schoolDefault_ASC = "schoolDefault_ASC",
  schoolDefault_DESC = "schoolDefault_DESC",

  newUserDefault_ASC = "newUserDefault_ASC",
  newUserDefault_DESC = "newUserDefault_DESC",

  roleGroupId_ASC = "roleGroupId_ASC",
  roleGroupId_DESC = "roleGroupId_DESC",

  originalId_ASC = "originalId_ASC",
  originalId_DESC = "originalId_DESC"
}
registerEnumType(K12ModuleGroupOrderByEnum, {
  name: "K12ModuleGroupOrderByInput"
});

@TypeGraphQLInputType()
export class K12ModuleGroupWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  name_eq?: string;
  @TypeGraphQLField({ nullable: true })
  name_contains?: string;
  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];

  @TypeGraphQLField({ nullable: true })
  code_eq?: string;
  @TypeGraphQLField({ nullable: true })
  code_contains?: string;
  @TypeGraphQLField({ nullable: true })
  code_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  code_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  code_in?: string[];

  @TypeGraphQLField({ nullable: true })
  remark_eq?: string;
  @TypeGraphQLField({ nullable: true })
  remark_contains?: string;
  @TypeGraphQLField({ nullable: true })
  remark_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  remark_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  remark_in?: string[];

  @TypeGraphQLField({ nullable: true })
  level_eq?: number;
  @TypeGraphQLField({ nullable: true })
  level_gt?: number;
  @TypeGraphQLField({ nullable: true })
  level_gte?: number;
  @TypeGraphQLField({ nullable: true })
  level_lt?: number;
  @TypeGraphQLField({ nullable: true })
  level_lte?: number;
  @TypeGraphQLField(() => [Int], { nullable: true })
  level_in?: number[];

  @TypeGraphQLField(() => ID, { nullable: true })
  schoolId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  schoolId_in?: string[];

  @TypeGraphQLField(() => K12ModuleGroupStatus, { nullable: true })
  status_eq?: K12ModuleGroupStatus;
  @TypeGraphQLField(() => [K12ModuleGroupStatus], { nullable: true })
  status_in?: K12ModuleGroupStatus[];

  @TypeGraphQLField(() => K12ModuleGroupSystemDefault, { nullable: true })
  systemDefault_eq?: K12ModuleGroupSystemDefault;
  @TypeGraphQLField(() => [K12ModuleGroupSystemDefault], { nullable: true })
  systemDefault_in?: K12ModuleGroupSystemDefault[];

  @TypeGraphQLField(() => K12ModuleGroupSchoolDefault, { nullable: true })
  schoolDefault_eq?: K12ModuleGroupSchoolDefault;
  @TypeGraphQLField(() => [K12ModuleGroupSchoolDefault], { nullable: true })
  schoolDefault_in?: K12ModuleGroupSchoolDefault[];

  @TypeGraphQLField(() => K12ModuleGroupNewUserDefault, { nullable: true })
  newUserDefault_eq?: K12ModuleGroupNewUserDefault;
  @TypeGraphQLField(() => [K12ModuleGroupNewUserDefault], { nullable: true })
  newUserDefault_in?: K12ModuleGroupNewUserDefault[];

  @TypeGraphQLField(() => ID, { nullable: true })
  roleGroupId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  roleGroupId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  originalId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  originalId_in?: string[];
}

@TypeGraphQLInputType()
export class K12ModuleGroupWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class K12ModuleGroupCreateInput {
  @TypeGraphQLField()
  name!: string;

  @TypeGraphQLField()
  code!: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField()
  level!: number;

  @TypeGraphQLField()
  schoolId!: string;

  @TypeGraphQLField(() => K12ModuleGroupStatus)
  status!: K12ModuleGroupStatus;

  @TypeGraphQLField(() => K12ModuleGroupSystemDefault)
  systemDefault!: K12ModuleGroupSystemDefault;

  @TypeGraphQLField(() => K12ModuleGroupSchoolDefault)
  schoolDefault!: K12ModuleGroupSchoolDefault;

  @TypeGraphQLField(() => K12ModuleGroupNewUserDefault)
  newUserDefault!: K12ModuleGroupNewUserDefault;

  @TypeGraphQLField()
  roleGroupId!: string;

  @TypeGraphQLField({ nullable: true })
  originalId?: string;
}

@TypeGraphQLInputType()
export class K12ModuleGroupUpdateInput {
  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  code?: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField({ nullable: true })
  level?: number;

  @TypeGraphQLField({ nullable: true })
  schoolId?: string;

  @TypeGraphQLField(() => K12ModuleGroupStatus, { nullable: true })
  status?: K12ModuleGroupStatus;

  @TypeGraphQLField(() => K12ModuleGroupSystemDefault, { nullable: true })
  systemDefault?: K12ModuleGroupSystemDefault;

  @TypeGraphQLField(() => K12ModuleGroupSchoolDefault, { nullable: true })
  schoolDefault?: K12ModuleGroupSchoolDefault;

  @TypeGraphQLField(() => K12ModuleGroupNewUserDefault, { nullable: true })
  newUserDefault?: K12ModuleGroupNewUserDefault;

  @TypeGraphQLField({ nullable: true })
  roleGroupId?: string;

  @TypeGraphQLField({ nullable: true })
  originalId?: string;
}

@ArgsType()
export class K12ModuleGroupWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => K12ModuleGroupWhereInput, { nullable: true })
  where?: K12ModuleGroupWhereInput;
  @TypeGraphQLField(() => K12ModuleGroupOrderByEnum, { nullable: true })
  orderBy?: K12ModuleGroupOrderByEnum;
}

@ArgsType()
export class K12ModuleGroupCreateManyArgs {
  @TypeGraphQLField(() => [K12ModuleGroupCreateInput])
  data!: K12ModuleGroupCreateInput[];
}

@ArgsType()
export class K12ModuleGroupUpdateArgs {
  @TypeGraphQLField() data!: K12ModuleGroupUpdateInput;
  @TypeGraphQLField() where!: K12ModuleGroupWhereUniqueInput;
}

export enum K12ModuleGroupMappingOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  moduleId_ASC = "moduleId_ASC",
  moduleId_DESC = "moduleId_DESC",

  moduleGroupId_ASC = "moduleGroupId_ASC",
  moduleGroupId_DESC = "moduleGroupId_DESC"
}
registerEnumType(K12ModuleGroupMappingOrderByEnum, {
  name: "K12ModuleGroupMappingOrderByInput"
});

@TypeGraphQLInputType()
export class K12ModuleGroupMappingWhereInput extends BaseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  moduleId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  moduleId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  moduleGroupId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  moduleGroupId_in?: string[];
}

@TypeGraphQLInputType()
export class K12ModuleGroupMappingWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class K12ModuleGroupMappingCreateInput {
  @TypeGraphQLField()
  moduleId!: string;

  @TypeGraphQLField()
  moduleGroupId!: string;
}

@TypeGraphQLInputType()
export class K12ModuleGroupMappingUpdateInput {
  @TypeGraphQLField({ nullable: true })
  moduleId?: string;

  @TypeGraphQLField({ nullable: true })
  moduleGroupId?: string;
}

@ArgsType()
export class K12ModuleGroupMappingWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => K12ModuleGroupMappingWhereInput, { nullable: true })
  where?: K12ModuleGroupMappingWhereInput;
  @TypeGraphQLField(() => K12ModuleGroupMappingOrderByEnum, { nullable: true })
  orderBy?: K12ModuleGroupMappingOrderByEnum;
}

@ArgsType()
export class K12ModuleGroupMappingCreateManyArgs {
  @TypeGraphQLField(() => [K12ModuleGroupMappingCreateInput])
  data!: K12ModuleGroupMappingCreateInput[];
}

@ArgsType()
export class K12ModuleGroupMappingUpdateArgs {
  @TypeGraphQLField() data!: K12ModuleGroupMappingUpdateInput;
  @TypeGraphQLField() where!: K12ModuleGroupMappingWhereUniqueInput;
}

export enum K12SchoolModuleMappingOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  schoolId_ASC = "schoolId_ASC",
  schoolId_DESC = "schoolId_DESC",

  moduleId_ASC = "moduleId_ASC",
  moduleId_DESC = "moduleId_DESC"
}
registerEnumType(K12SchoolModuleMappingOrderByEnum, {
  name: "K12SchoolModuleMappingOrderByInput"
});

@TypeGraphQLInputType()
export class K12SchoolModuleMappingWhereInput extends BaseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  schoolId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  schoolId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  moduleId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  moduleId_in?: string[];
}

@TypeGraphQLInputType()
export class K12SchoolModuleMappingWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class K12SchoolModuleMappingCreateInput {
  @TypeGraphQLField()
  schoolId!: string;

  @TypeGraphQLField()
  moduleId!: string;
}

@TypeGraphQLInputType()
export class K12SchoolModuleMappingUpdateInput {
  @TypeGraphQLField({ nullable: true })
  schoolId?: string;

  @TypeGraphQLField({ nullable: true })
  moduleId?: string;
}

@ArgsType()
export class K12SchoolModuleMappingWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => K12SchoolModuleMappingWhereInput, { nullable: true })
  where?: K12SchoolModuleMappingWhereInput;
  @TypeGraphQLField(() => K12SchoolModuleMappingOrderByEnum, { nullable: true })
  orderBy?: K12SchoolModuleMappingOrderByEnum;
}

@ArgsType()
export class K12SchoolModuleMappingCreateManyArgs {
  @TypeGraphQLField(() => [K12SchoolModuleMappingCreateInput])
  data!: K12SchoolModuleMappingCreateInput[];
}

@ArgsType()
export class K12SchoolModuleMappingUpdateArgs {
  @TypeGraphQLField() data!: K12SchoolModuleMappingUpdateInput;
  @TypeGraphQLField() where!: K12SchoolModuleMappingWhereUniqueInput;
}

export enum K12ModuleOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC",

  code_ASC = "code_ASC",
  code_DESC = "code_DESC",

  remark_ASC = "remark_ASC",
  remark_DESC = "remark_DESC",

  order_ASC = "order_ASC",
  order_DESC = "order_DESC",

  categoryId_ASC = "categoryId_ASC",
  categoryId_DESC = "categoryId_DESC",

  isCategory_ASC = "isCategory_ASC",
  isCategory_DESC = "isCategory_DESC",

  status_ASC = "status_ASC",
  status_DESC = "status_DESC",

  superiorId_ASC = "superiorId_ASC",
  superiorId_DESC = "superiorId_DESC",

  applicationId_ASC = "applicationId_ASC",
  applicationId_DESC = "applicationId_DESC"
}
registerEnumType(K12ModuleOrderByEnum, {
  name: "K12ModuleOrderByInput"
});

@TypeGraphQLInputType()
export class K12ModuleWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  name_eq?: string;
  @TypeGraphQLField({ nullable: true })
  name_contains?: string;
  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];

  @TypeGraphQLField({ nullable: true })
  code_eq?: string;
  @TypeGraphQLField({ nullable: true })
  code_contains?: string;
  @TypeGraphQLField({ nullable: true })
  code_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  code_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  code_in?: string[];

  @TypeGraphQLField({ nullable: true })
  remark_eq?: string;
  @TypeGraphQLField({ nullable: true })
  remark_contains?: string;
  @TypeGraphQLField({ nullable: true })
  remark_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  remark_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  remark_in?: string[];

  @TypeGraphQLField({ nullable: true })
  order_eq?: number;
  @TypeGraphQLField({ nullable: true })
  order_gt?: number;
  @TypeGraphQLField({ nullable: true })
  order_gte?: number;
  @TypeGraphQLField({ nullable: true })
  order_lt?: number;
  @TypeGraphQLField({ nullable: true })
  order_lte?: number;
  @TypeGraphQLField(() => [Int], { nullable: true })
  order_in?: number[];

  @TypeGraphQLField(() => ID, { nullable: true })
  categoryId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  categoryId_in?: string[];

  @TypeGraphQLField(() => K12ModuleIsCategory, { nullable: true })
  isCategory_eq?: K12ModuleIsCategory;
  @TypeGraphQLField(() => [K12ModuleIsCategory], { nullable: true })
  isCategory_in?: K12ModuleIsCategory[];

  @TypeGraphQLField(() => K12ModuleStatus, { nullable: true })
  status_eq?: K12ModuleStatus;
  @TypeGraphQLField(() => [K12ModuleStatus], { nullable: true })
  status_in?: K12ModuleStatus[];

  @TypeGraphQLField(() => ID, { nullable: true })
  superiorId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  superiorId_in?: string[];

  @TypeGraphQLField(() => ID, { nullable: true })
  applicationId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  applicationId_in?: string[];
}

@TypeGraphQLInputType()
export class K12ModuleWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class K12ModuleCreateInput {
  @TypeGraphQLField()
  name!: string;

  @TypeGraphQLField()
  code!: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField()
  order!: number;

  @TypeGraphQLField({ nullable: true })
  categoryId?: string;

  @TypeGraphQLField(() => K12ModuleIsCategory)
  isCategory!: K12ModuleIsCategory;

  @TypeGraphQLField(() => K12ModuleStatus)
  status!: K12ModuleStatus;

  @TypeGraphQLField({ nullable: true })
  superiorId?: string;

  @TypeGraphQLField({ nullable: true })
  applicationId?: string;
}

@TypeGraphQLInputType()
export class K12ModuleUpdateInput {
  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  code?: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField({ nullable: true })
  order?: number;

  @TypeGraphQLField({ nullable: true })
  categoryId?: string;

  @TypeGraphQLField(() => K12ModuleIsCategory, { nullable: true })
  isCategory?: K12ModuleIsCategory;

  @TypeGraphQLField(() => K12ModuleStatus, { nullable: true })
  status?: K12ModuleStatus;

  @TypeGraphQLField({ nullable: true })
  superiorId?: string;

  @TypeGraphQLField({ nullable: true })
  applicationId?: string;
}

@ArgsType()
export class K12ModuleWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => K12ModuleWhereInput, { nullable: true })
  where?: K12ModuleWhereInput;
  @TypeGraphQLField(() => K12ModuleOrderByEnum, { nullable: true })
  orderBy?: K12ModuleOrderByEnum;
}

@ArgsType()
export class K12ModuleCreateManyArgs {
  @TypeGraphQLField(() => [K12ModuleCreateInput])
  data!: K12ModuleCreateInput[];
}

@ArgsType()
export class K12ModuleUpdateArgs {
  @TypeGraphQLField() data!: K12ModuleUpdateInput;
  @TypeGraphQLField() where!: K12ModuleWhereUniqueInput;
}

export enum K12ApplicationOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC",

  code_ASC = "code_ASC",
  code_DESC = "code_DESC",

  remark_ASC = "remark_ASC",
  remark_DESC = "remark_DESC",

  status_ASC = "status_ASC",
  status_DESC = "status_DESC"
}
registerEnumType(K12ApplicationOrderByEnum, {
  name: "K12ApplicationOrderByInput"
});

@TypeGraphQLInputType()
export class K12ApplicationWhereInput extends BaseWhereInput {
  @TypeGraphQLField({ nullable: true })
  name_eq?: string;
  @TypeGraphQLField({ nullable: true })
  name_contains?: string;
  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];

  @TypeGraphQLField({ nullable: true })
  code_eq?: string;
  @TypeGraphQLField({ nullable: true })
  code_contains?: string;
  @TypeGraphQLField({ nullable: true })
  code_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  code_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  code_in?: string[];

  @TypeGraphQLField({ nullable: true })
  remark_eq?: string;
  @TypeGraphQLField({ nullable: true })
  remark_contains?: string;
  @TypeGraphQLField({ nullable: true })
  remark_startsWith?: string;
  @TypeGraphQLField({ nullable: true })
  remark_endsWith?: string;
  @TypeGraphQLField(() => [String], { nullable: true })
  remark_in?: string[];

  @TypeGraphQLField(() => K12ApplicationStatus, { nullable: true })
  status_eq?: K12ApplicationStatus;
  @TypeGraphQLField(() => [K12ApplicationStatus], { nullable: true })
  status_in?: K12ApplicationStatus[];
}

@TypeGraphQLInputType()
export class K12ApplicationWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class K12ApplicationCreateInput {
  @TypeGraphQLField()
  name!: string;

  @TypeGraphQLField()
  code!: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField(() => K12ApplicationStatus)
  status!: K12ApplicationStatus;
}

@TypeGraphQLInputType()
export class K12ApplicationUpdateInput {
  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  code?: string;

  @TypeGraphQLField({ nullable: true })
  remark?: string;

  @TypeGraphQLField(() => K12ApplicationStatus, { nullable: true })
  status?: K12ApplicationStatus;
}

@ArgsType()
export class K12ApplicationWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => K12ApplicationWhereInput, { nullable: true })
  where?: K12ApplicationWhereInput;
  @TypeGraphQLField(() => K12ApplicationOrderByEnum, { nullable: true })
  orderBy?: K12ApplicationOrderByEnum;
}

@ArgsType()
export class K12ApplicationCreateManyArgs {
  @TypeGraphQLField(() => [K12ApplicationCreateInput])
  data!: K12ApplicationCreateInput[];
}

@ArgsType()
export class K12ApplicationUpdateArgs {
  @TypeGraphQLField() data!: K12ApplicationUpdateInput;
  @TypeGraphQLField() where!: K12ApplicationWhereUniqueInput;
}

export enum K12SchoolExtendOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  schoolId_ASC = "schoolId_ASC",
  schoolId_DESC = "schoolId_DESC",

  regulateIsInit_ASC = "regulateIsInit_ASC",
  regulateIsInit_DESC = "regulateIsInit_DESC"
}
registerEnumType(K12SchoolExtendOrderByEnum, {
  name: "K12SchoolExtendOrderByInput"
});

@TypeGraphQLInputType()
export class K12SchoolExtendWhereInput extends BaseWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  schoolId_eq?: string;
  @TypeGraphQLField(() => [ID], { nullable: true })
  schoolId_in?: string[];

  @TypeGraphQLField(() => K12SchoolRegulateIsInit, { nullable: true })
  regulateIsInit_eq?: K12SchoolRegulateIsInit;
  @TypeGraphQLField(() => [K12SchoolRegulateIsInit], { nullable: true })
  regulateIsInit_in?: K12SchoolRegulateIsInit[];
}

@TypeGraphQLInputType()
export class K12SchoolExtendWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class K12SchoolExtendCreateInput {
  @TypeGraphQLField()
  schoolId!: string;

  @TypeGraphQLField(() => K12SchoolRegulateIsInit)
  regulateIsInit!: K12SchoolRegulateIsInit;
}

@TypeGraphQLInputType()
export class K12SchoolExtendUpdateInput {
  @TypeGraphQLField({ nullable: true })
  schoolId?: string;

  @TypeGraphQLField(() => K12SchoolRegulateIsInit, { nullable: true })
  regulateIsInit?: K12SchoolRegulateIsInit;
}

@ArgsType()
export class K12SchoolExtendWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => K12SchoolExtendWhereInput, { nullable: true })
  where?: K12SchoolExtendWhereInput;
  @TypeGraphQLField(() => K12SchoolExtendOrderByEnum, { nullable: true })
  orderBy?: K12SchoolExtendOrderByEnum;
}

@ArgsType()
export class K12SchoolExtendCreateManyArgs {
  @TypeGraphQLField(() => [K12SchoolExtendCreateInput])
  data!: K12SchoolExtendCreateInput[];
}

@ArgsType()
export class K12SchoolExtendUpdateArgs {
  @TypeGraphQLField() data!: K12SchoolExtendUpdateInput;
  @TypeGraphQLField() where!: K12SchoolExtendWhereUniqueInput;
}
